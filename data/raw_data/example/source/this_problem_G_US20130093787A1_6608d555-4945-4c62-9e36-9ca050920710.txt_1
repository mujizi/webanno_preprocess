[0165] Accordingly, in one embodiment, both the location of the devices and those of the points of interest are given in spherical coordinates measured in degrees of latitude and longitude. The first step is to convert the locations of the points of interest to polar coordinates with the device or viewing location at the center and north from the device as the 0 angle. It is noted that this algorithm assumes that the device is not located near one of the Earth's poles. In one embodiment, an equirectangular projection of latitude and longitude can be used during this conversion to avoid the expense of computations in spherical geometry. This allows the Pythagorean Theorem from plane geometry to be used for distance and standard trigonometry to be used for the angle. As shown in FIG. 15, a user 1501 with a mobile device (e.g., a UE 101) is surrounded by various POIs 1503a-1503g. The respective bold arrows represent the angle and distance to each POI in the polar coordinate system. The cardinal directions (e.g., North, East, South, and West) are also displayed for reference.
[0166] FIG. 16 is a diagram illustrating a process for projecting representations of location items on a surface for generating a perspective display, according to one embodiment. In this example, the surface is a virtual cylinder 1601. By way of example, the virtual cylinder 1601 is a finite, 2D space represented by pairs of real numbers. One dimension is vertical and the other is horizontal. In one embodiment, for the perspective projection, the vertical dimension does not need any particular unit of measure so the cylinder is simply given a height of 1.0. The horizontal dimension is in degrees measured from north. The POIs 1503a-1503g can then be mapped or projected onto the cylinder 1601.
[0167] With respect to the projection, the polar angle is also the angle for the cylindrical projection. The polar distance is also converted to a perspective height. In one environment, using an artistic perspective, the horizon can be located above the top of the cylinder such that the farthest point of interest (e.g., POI 1503e) is at the top of the cylinder (coordinate 1.0). The bottom of the cylinder (coordinate 0.0) can be the location of the nearest point of interest (e.g., POI 1503a). In certain embodiments, several different simplifications are possible to avoid or otherwise reduce the computational expense of generating a display from a pure artistic perspective. For example, the log function provides an inexpensive foreshortening of distance with accuracy generally adequate for this problem. As shown in FIG. 16, the lighthouse (POI 1503e) is the most distant point of interest from the device and is projected to the top of the cylinder. The ice cream shop (POI 1503a) is the closest point of interest to the device and is projected to the bottom of the cylinder. Alternatively, if altitude information is available for the POIs, then the altitude information (rather than distance from the viewing location) can be used to determine the projected heights or POIs 1503a-1503g.
[0168] FIG. 17 is a diagram illustrating a process for allocating cells of a surface for generating a perspective display, according to one embodiment. FIG. 17 illustrates the cylinder 1601 overlaid with a grid seven cells high and twenty-eight cells around. It is noted that the algorithm is independent of the number of cells. For example, the actual number of cells is varied to meet the needs of a particular graphical interface design (e.g., button size for easy touch). Each POI 1503a-1503g is assigned a distinct rectangular block 1621 of cells. In FIG. 17, each gray patch (e.g., patch 1623) marks a block of four cells assigned to a POI 1503. In one embodiment, the patches 1623 show the desired or recommended output of the algorithm. It is noted that the algorithm is independent of the number of cells in a block 1621. The actual number of cells per block 1621 is varied to meet the needs of a particular graphical interface design. As the number of cells in a block 1621 and the total number of cells increase, blocks (e.g., block 1621) are positioned with finer granularity, but the cost (e.g., resource costs) of locating completely unoccupied blocks increases.
[0169] A block 1621 of cells corresponds to a button 1623 on the screen, including any margins around the button 1623. A user interface design typically expresses the button size in terms of pixels. Given the following values: [0170] Hb=the height of the button in pixels, including margins (block height) [0171] Hs=the height of the screen in pixels [0172] Vk=the number of grid cell in a block 1621, vertically