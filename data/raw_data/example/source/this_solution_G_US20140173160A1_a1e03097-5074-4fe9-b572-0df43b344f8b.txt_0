[0002] A processing circuit for a mobile terminal or other device may be implemented as an Application Specific Integrated Circuit (ASIC), or Field Programmable Gate Array (FPGA) where different functions are implemented by different modules. Implementation of different functions in different modules enables one module to be updated or replaced without affecting the function of the other modules. Configuration data, status information, and other data used by a module to implement its assigned functions are stored in registers. The use of registers for storing configuration data enables the modules to operate in multiple modes and to perform multiple functions.
[0003] The organization of the registers in the processing circuit is one design consideration. One conventional approach to organizing the registers is to centralize all registers in a register unit. Each module interfaces directly to the matched registers. The register unit is responsible for decoding registers addresses and outputting stored values to corresponding modules.
[0004] This centralized approach has several disadvantages. For example, the centralized solution requires the register unit to decode all register addresses, which generally requires complex logic, and thus, leads to timing problems. Further, because the register unit is responsible for distributing all registers to the modules, it needs to interface with all of the modules. This one-to-many interface may lead to a routing jam at the register module group. In addition, this solution is hard to update. For example, if a new module is added or removed, the register unit and the corresponding logic have to be revised.
[0005] Another conventional approach to organizing the registers is to distribute the registers among modules connected to an internal register bus. In this approach, each module includes its own register group and decoder and is connected to an internal register bus. A bus converter provides an external interface to the register bus and converts the external interface protocol into the internal register bus protocol. All of the modules monitor the internal register bus simultaneously. When a register request is asserted, all of the modules decode a target register address associated with the register request. If the target register address specifies a register that belongs to the module, the module latches the register data into or reads register data from the specified register. All other modules do nothing.
[0006] While the internal bus structure eliminates the one-to-many interface and the update problems associated with the centralized register solution, the bus structure solution still encounters timing problems. In particular, as the number of modules interfacing with the internal register bus increases, the fan-out of the register bus is very high, which results in a large timing delay.