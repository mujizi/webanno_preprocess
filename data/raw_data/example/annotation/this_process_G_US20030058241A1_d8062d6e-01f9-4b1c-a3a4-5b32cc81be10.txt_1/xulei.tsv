#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Diy_coref|
#T_RL=webanno.custom.Diy_coref_re|BT_webanno.custom.Diy_coref


#Text=[0037] In the rendering process, the geometric primitives corresponding to objects in a scene are processed to generate a display image.
1-1	0-1	[	_	_	
1-2	1-5	0037	_	_	
1-3	5-6	]	_	_	
1-4	7-9	In	_	_	
1-5	10-13	the	_	_	
1-6	14-23	rendering	_	_	
1-7	24-31	process	_	_	
1-8	31-32	,	_	_	
1-9	33-36	the	_	_	
1-10	37-46	geometric	_	_	
1-11	47-57	primitives	_	_	
1-12	58-71	corresponding	_	_	
1-13	72-74	to	_	_	
1-14	75-82	objects	_	_	
1-15	83-85	in	_	_	
1-16	86-87	a	_	_	
1-17	88-93	scene	_	_	
1-18	94-97	are	_	_	
1-19	98-107	processed	_	_	
1-20	108-110	to	_	_	
1-21	111-119	generate	_	_	
1-22	120-121	a	_	_	
1-23	122-129	display	_	_	
1-24	130-135	image	_	_	
1-25	135-136	.	_	_	

#Text=In the context of three-dimensional graphics, the rendering process includes transforming the objects to display device coordinates, and rasterizing the geometric primitives in the models to generate pixel values for the pixel elements of a display image.
2-1	137-139	In	_	_	
2-2	140-143	the	_	_	
2-3	144-151	context	_	_	
2-4	152-154	of	_	_	
2-5	155-172	three-dimensional	_	_	
2-6	173-181	graphics	_	_	
2-7	181-182	,	_	_	
2-8	183-186	the	_	_	
2-9	187-196	rendering	_	_	
2-10	197-204	process	_	_	
2-11	205-213	includes	_	_	
2-12	214-226	transforming	_	_	
2-13	227-230	the	_	_	
2-14	231-238	objects	_	_	
2-15	239-241	to	_	_	
2-16	242-249	display	_	_	
2-17	250-256	device	_	_	
2-18	257-268	coordinates	_	_	
2-19	268-269	,	_	_	
2-20	270-273	and	_	_	
2-21	274-285	rasterizing	_	_	
2-22	286-289	the	_	_	
2-23	290-299	geometric	_	_	
2-24	300-310	primitives	_	_	
2-25	311-313	in	_	_	
2-26	314-317	the	_	_	
2-27	318-324	models	_	_	
2-28	325-327	to	_	_	
2-29	328-336	generate	_	_	
2-30	337-342	pixel	_	_	
2-31	343-349	values	_	_	
2-32	350-353	for	_	_	
2-33	354-357	the	_	_	
2-34	358-363	pixel	_	_	
2-35	364-372	elements	_	_	
2-36	373-375	of	_	_	
2-37	376-377	a	_	_	
2-38	378-385	display	_	_	
2-39	386-391	image	_	_	
2-40	391-392	.	_	_	

#Text=Potentially visible objects in a particular scene are identified by transforming objects into a common three-dimensional coordinate system and then determining whether the objects overlap a view volume, which is a three-dimensional space defining the bounds of a scene.
3-1	393-404	Potentially	_	_	
3-2	405-412	visible	_	_	
3-3	413-420	objects	_	_	
3-4	421-423	in	_	_	
3-5	424-425	a	_	_	
3-6	426-436	particular	_	_	
3-7	437-442	scene	_	_	
3-8	443-446	are	_	_	
3-9	447-457	identified	_	_	
3-10	458-460	by	_	_	
3-11	461-473	transforming	_	_	
3-12	474-481	objects	_	_	
3-13	482-486	into	_	_	
3-14	487-488	a	_	_	
3-15	489-495	common	_	_	
3-16	496-513	three-dimensional	_	_	
3-17	514-524	coordinate	_	_	
3-18	525-531	system	_	_	
3-19	532-535	and	_	_	
3-20	536-540	then	_	_	
3-21	541-552	determining	_	_	
3-22	553-560	whether	_	_	
3-23	561-564	the	_	_	
3-24	565-572	objects	_	_	
3-25	573-580	overlap	_	_	
3-26	581-582	a	_	_	
3-27	583-587	view	_	_	
3-28	588-594	volume	_	_	
3-29	594-595	,	_	_	
3-30	596-601	which	_	_	
3-31	602-604	is	_	_	
3-32	605-606	a	_	_	
3-33	607-624	three-dimensional	_	_	
3-34	625-630	space	_	_	
3-35	631-639	defining	_	_	
3-36	640-643	the	_	_	
3-37	644-650	bounds	_	_	
3-38	651-653	of	_	_	
3-39	654-655	a	_	_	
3-40	656-661	scene	_	_	
3-41	661-662	.	_	_	

#Text=The geometric primitives of potentially visible objects are then transformed to display device coordinates and rasterized into pixel data.
4-1	663-666	The	_	_	
4-2	667-676	geometric	_	_	
4-3	677-687	primitives	_	_	
4-4	688-690	of	_	_	
4-5	691-702	potentially	_	_	
4-6	703-710	visible	_	_	
4-7	711-718	objects	_	_	
4-8	719-722	are	_	_	
4-9	723-727	then	_	_	
4-10	728-739	transformed	_	_	
4-11	740-742	to	_	_	
4-12	743-750	display	_	_	
4-13	751-757	device	_	_	
4-14	758-769	coordinates	_	_	
4-15	770-773	and	_	_	
4-16	774-784	rasterized	_	_	
4-17	785-789	into	_	_	
4-18	790-795	pixel	_	_	
4-19	796-800	data	_	_	
4-20	800-801	.	_	_	

#Text=Before rasterizing the primitives, it is common to eliminate surfaces that face away from the viewpoint in a process known as "backface culling."
#Text=[0038] Rasterizing generally refers to the process of computing a pixel value for a pixel based on data from the geometric primitives that project onto or "cover" the pixel.
5-1	802-808	Before	_	_	
5-2	809-820	rasterizing	_	_	
5-3	821-824	the	_	_	
5-4	825-835	primitives	_	_	
5-5	835-836	,	_	_	
5-6	837-839	it	_	_	
5-7	840-842	is	_	_	
5-8	843-849	common	_	_	
5-9	850-852	to	_	_	
5-10	853-862	eliminate	_	_	
5-11	863-871	surfaces	_	_	
5-12	872-876	that	_	_	
5-13	877-881	face	_	_	
5-14	882-886	away	_	_	
5-15	887-891	from	_	_	
5-16	892-895	the	_	_	
5-17	896-905	viewpoint	_	_	
5-18	906-908	in	_	_	
5-19	909-910	a	_	_	
5-20	911-918	process	_	_	
5-21	919-924	known	_	_	
5-22	925-927	as	_	_	
5-23	928-929	"	_	_	
5-24	929-937	backface	_	_	
5-25	938-945	culling	_	_	
5-26	945-946	.	_	_	
5-27	946-947	"	_	_	
5-28	948-949	[	_	_	
5-29	949-953	0038	_	_	
5-30	953-954	]	_	_	
5-31	955-966	Rasterizing	_	_	
5-32	967-976	generally	_	_	
5-33	977-983	refers	_	_	
5-34	984-986	to	_	_	
5-35	987-990	the	_	_	
5-36	991-998	process	_	_	
5-37	999-1001	of	_	_	
5-38	1002-1011	computing	_	_	
5-39	1012-1013	a	_	_	
5-40	1014-1019	pixel	_	_	
5-41	1020-1025	value	_	_	
5-42	1026-1029	for	_	_	
5-43	1030-1031	a	_	_	
5-44	1032-1037	pixel	_	_	
5-45	1038-1043	based	_	_	
5-46	1044-1046	on	_	_	
5-47	1047-1051	data	_	_	
5-48	1052-1056	from	_	_	
5-49	1057-1060	the	_	_	
5-50	1061-1070	geometric	_	_	
5-51	1071-1081	primitives	_	_	
5-52	1082-1086	that	_	_	
5-53	1087-1094	project	_	_	
5-54	1095-1099	onto	_	_	
5-55	1100-1102	or	_	_	
5-56	1103-1104	"	_	_	
5-57	1104-1109	cover	_	_	
5-58	1109-1110	"	_	_	
5-59	1111-1114	the	_	_	
5-60	1115-1120	pixel	_	_	
5-61	1120-1121	.	_	_	

#Text=As part of the rendering process, hidden surface removal is performed on the potentially visible objects in a scene.
6-1	1122-1124	As	_	_	
6-2	1125-1129	part	_	_	
6-3	1130-1132	of	_	_	
6-4	1133-1136	the	_	_	
6-5	1137-1146	rendering	_	_	
6-6	1147-1154	process	_	_	
6-7	1154-1155	,	_	_	
6-8	1156-1162	hidden	_	_	
6-9	1163-1170	surface	_	_	
6-10	1171-1178	removal	_	_	
6-11	1179-1181	is	_	_	
6-12	1182-1191	performed	_	_	
6-13	1192-1194	on	_	_	
6-14	1195-1198	the	_	_	
6-15	1199-1210	potentially	_	_	
6-16	1211-1218	visible	_	_	
6-17	1219-1226	objects	_	_	
6-18	1227-1229	in	_	_	
6-19	1230-1231	a	_	_	
6-20	1232-1237	scene	_	_	
6-21	1237-1238	.	_	_	

#Text=Objects are referred to as potentially visible because they reside in or overlap the view volume.
7-1	1239-1246	Objects	_	_	
7-2	1247-1250	are	_	_	
7-3	1251-1259	referred	_	_	
7-4	1260-1262	to	_	_	
7-5	1263-1265	as	_	_	
7-6	1266-1277	potentially	_	_	
7-7	1278-1285	visible	_	_	
7-8	1286-1293	because	_	_	
7-9	1294-1298	they	_	_	
7-10	1299-1305	reside	_	_	
7-11	1306-1308	in	_	_	
7-12	1309-1311	or	_	_	
7-13	1312-1319	overlap	_	_	
7-14	1320-1323	the	_	_	
7-15	1324-1328	view	_	_	
7-16	1329-1335	volume	_	_	
7-17	1335-1336	.	_	_	

#Text=However, some of the objects or parts of objects in the view volume will not be represented in the rendered image because they are blocked or occluded by other objects.
8-1	1337-1344	However	_	_	
8-2	1344-1345	,	_	_	
8-3	1346-1350	some	_	_	
8-4	1351-1353	of	_	_	
8-5	1354-1357	the	_	_	
8-6	1358-1365	objects	_	_	
8-7	1366-1368	or	_	_	
8-8	1369-1374	parts	_	_	
8-9	1375-1377	of	_	_	
8-10	1378-1385	objects	_	_	
8-11	1386-1388	in	_	_	
8-12	1389-1392	the	_	_	
8-13	1393-1397	view	_	_	
8-14	1398-1404	volume	_	_	
8-15	1405-1409	will	_	_	
8-16	1410-1413	not	_	_	
8-17	1414-1416	be	_	_	
8-18	1417-1428	represented	_	_	
8-19	1429-1431	in	_	_	
8-20	1432-1435	the	_	_	
8-21	1436-1444	rendered	_	_	
8-22	1445-1450	image	_	_	
8-23	1451-1458	because	_	_	
8-24	1459-1463	they	_	_	
8-25	1464-1467	are	_	_	
8-26	1468-1475	blocked	_	_	
8-27	1476-1478	or	_	_	
8-28	1479-1487	occluded	_	_	
8-29	1488-1490	by	_	_	
8-30	1491-1496	other	_	_	
8-31	1497-1504	objects	_	_	
8-32	1504-1505	.	_	_	

#Text=Hidden surface removal refers to the process of determining which objects or portions of objects are, and conversely, are not, visible in the scene.
9-1	1506-1512	Hidden	*[1]	10-2[2_1]	
9-2	1513-1520	surface	*[1]	_	
9-3	1521-1528	removal	*[1]	_	
9-4	1529-1535	refers	*[1]	_	
9-5	1536-1538	to	*[1]	_	
9-6	1539-1542	the	*[1]	_	
9-7	1543-1550	process	*[1]	_	
9-8	1551-1553	of	*[1]	_	
9-9	1554-1565	determining	*[1]	_	
9-10	1566-1571	which	*[1]	_	
9-11	1572-1579	objects	*[1]	_	
9-12	1580-1582	or	*[1]	_	
9-13	1583-1591	portions	*[1]	_	
9-14	1592-1594	of	*[1]	_	
9-15	1595-1602	objects	*[1]	_	
9-16	1603-1606	are	*[1]	_	
9-17	1606-1607	,	*[1]	_	
9-18	1608-1611	and	*[1]	_	
9-19	1612-1622	conversely	*[1]	_	
9-20	1622-1623	,	*[1]	_	
9-21	1624-1627	are	*[1]	_	
9-22	1628-1631	not	*[1]	_	
9-23	1631-1632	,	*[1]	_	
9-24	1633-1640	visible	*[1]	_	
9-25	1641-1643	in	*[1]	_	
9-26	1644-1647	the	*[1]	_	
9-27	1648-1653	scene	*[1]	_	
9-28	1653-1654	.	*[1]	_	

#Text=During this process, the graphics system determines which objects or portions are visible from the viewpoint.
#Text=[0039] One approach to hidden surface removal is referred to as the z-buffer algorithm.
10-1	1655-1661	During	_	_	
10-2	1662-1666	this	*[2]	_	
10-3	1667-1674	process	*[2]	_	
10-4	1674-1675	,	_	_	
10-5	1676-1679	the	_	_	
10-6	1680-1688	graphics	_	_	
10-7	1689-1695	system	_	_	
10-8	1696-1706	determines	_	_	
10-9	1707-1712	which	_	_	
10-10	1713-1720	objects	_	_	
10-11	1721-1723	or	_	_	
10-12	1724-1732	portions	_	_	
10-13	1733-1736	are	_	_	
10-14	1737-1744	visible	_	_	
10-15	1745-1749	from	_	_	
10-16	1750-1753	the	_	_	
10-17	1754-1763	viewpoint	_	_	
10-18	1763-1764	.	_	_	
10-19	1765-1766	[	_	_	
10-20	1766-1770	0039	_	_	
10-21	1770-1771	]	_	_	
10-22	1772-1775	One	_	_	
10-23	1776-1784	approach	_	_	
10-24	1785-1787	to	_	_	
10-25	1788-1794	hidden	_	_	
10-26	1795-1802	surface	_	_	
10-27	1803-1810	removal	_	_	
10-28	1811-1813	is	_	_	
10-29	1814-1822	referred	_	_	
10-30	1823-1825	to	_	_	
10-31	1826-1828	as	_	_	
10-32	1829-1832	the	_	_	
10-33	1833-1841	z-buffer	_	_	
10-34	1842-1851	algorithm	_	_	
10-35	1851-1852	.	_	_	

#Text=In this approach, a "z-buffer" is used to perform hidden surface removal on pixel data generated as primitives are rasterized.
11-1	1853-1855	In	_	_	
11-2	1856-1860	this	_	_	
11-3	1861-1869	approach	_	_	
11-4	1869-1870	,	_	_	
11-5	1871-1872	a	_	_	
11-6	1873-1874	"	_	_	
11-7	1874-1882	z-buffer	_	_	
11-8	1882-1883	"	_	_	
11-9	1884-1886	is	_	_	
11-10	1887-1891	used	_	_	
11-11	1892-1894	to	_	_	
11-12	1895-1902	perform	_	_	
11-13	1903-1909	hidden	_	_	
11-14	1910-1917	surface	_	_	
11-15	1918-1925	removal	_	_	
11-16	1926-1928	on	_	_	
11-17	1929-1934	pixel	_	_	
11-18	1935-1939	data	_	_	
11-19	1940-1949	generated	_	_	
11-20	1950-1952	as	_	_	
11-21	1953-1963	primitives	_	_	
11-22	1964-1967	are	_	_	
11-23	1968-1978	rasterized	_	_	
11-24	1978-1979	.	_	_	

#Text=The letter "z" refers to a depth value and originates from the common practice of expressing distance from the viewpoint using the z-axis in a three-dimensional coordinate system.
12-1	1980-1983	The	_	_	
12-2	1984-1990	letter	_	_	
12-3	1991-1992	"	_	_	
12-4	1992-1993	z	_	_	
12-5	1993-1994	"	_	_	
12-6	1995-2001	refers	_	_	
12-7	2002-2004	to	_	_	
12-8	2005-2006	a	_	_	
12-9	2007-2012	depth	_	_	
12-10	2013-2018	value	_	_	
12-11	2019-2022	and	_	_	
12-12	2023-2033	originates	_	_	
12-13	2034-2038	from	_	_	
12-14	2039-2042	the	_	_	
12-15	2043-2049	common	_	_	
12-16	2050-2058	practice	_	_	
12-17	2059-2061	of	_	_	
12-18	2062-2072	expressing	_	_	
12-19	2073-2081	distance	_	_	
12-20	2082-2086	from	_	_	
12-21	2087-2090	the	_	_	
12-22	2091-2100	viewpoint	_	_	
12-23	2101-2106	using	_	_	
12-24	2107-2110	the	_	_	
12-25	2111-2117	z-axis	_	_	
12-26	2118-2120	in	_	_	
12-27	2121-2122	a	_	_	
12-28	2123-2140	three-dimensional	_	_	
12-29	2141-2151	coordinate	_	_	
12-30	2152-2158	system	_	_	
12-31	2158-2159	.	_	_	

#Text=The z-buffer is used to store pixels closest to the viewpoint for each pixel location in an image.
13-1	2160-2163	The	_	_	
13-2	2164-2172	z-buffer	_	_	
13-3	2173-2175	is	_	_	
13-4	2176-2180	used	_	_	
13-5	2181-2183	to	_	_	
13-6	2184-2189	store	_	_	
13-7	2190-2196	pixels	_	_	
13-8	2197-2204	closest	_	_	
13-9	2205-2207	to	_	_	
13-10	2208-2211	the	_	_	
13-11	2212-2221	viewpoint	_	_	
13-12	2222-2225	for	_	_	
13-13	2226-2230	each	_	_	
13-14	2231-2236	pixel	_	_	
13-15	2237-2245	location	_	_	
13-16	2246-2248	in	_	_	
13-17	2249-2251	an	_	_	
13-18	2252-2257	image	_	_	
13-19	2257-2258	.	_	_	

#Text=As a primitive is rasterized, pixel data including a depth value is generated.
14-1	2259-2261	As	_	_	
14-2	2262-2263	a	_	_	
14-3	2264-2273	primitive	_	_	
14-4	2274-2276	is	_	_	
14-5	2277-2287	rasterized	_	_	
14-6	2287-2288	,	_	_	
14-7	2289-2294	pixel	_	_	
14-8	2295-2299	data	_	_	
14-9	2300-2309	including	_	_	
14-10	2310-2311	a	_	_	
14-11	2312-2317	depth	_	_	
14-12	2318-2323	value	_	_	
14-13	2324-2326	is	_	_	
14-14	2327-2336	generated	_	_	
14-15	2336-2337	.	_	_	

#Text=The depth of a newly generated pixel is compared with a pixel stored in the z-buffer for the same pixel location.
15-1	2338-2341	The	_	_	
15-2	2342-2347	depth	_	_	
15-3	2348-2350	of	_	_	
15-4	2351-2352	a	_	_	
15-5	2353-2358	newly	_	_	
15-6	2359-2368	generated	_	_	
15-7	2369-2374	pixel	_	_	
15-8	2375-2377	is	_	_	
15-9	2378-2386	compared	_	_	
15-10	2387-2391	with	_	_	
15-11	2392-2393	a	_	_	
15-12	2394-2399	pixel	_	_	
15-13	2400-2406	stored	_	_	
15-14	2407-2409	in	_	_	
15-15	2410-2413	the	_	_	
15-16	2414-2422	z-buffer	_	_	
15-17	2423-2426	for	_	_	
15-18	2427-2430	the	_	_	
15-19	2431-2435	same	_	_	
15-20	2436-2441	pixel	_	_	
15-21	2442-2450	location	_	_	
15-22	2450-2451	.	_	_	

#Text=If the newly generated pixel is further from the view point than the stored pixel, it is rejected.
16-1	2452-2454	If	_	_	
16-2	2455-2458	the	_	_	
16-3	2459-2464	newly	_	_	
16-4	2465-2474	generated	_	_	
16-5	2475-2480	pixel	_	_	
16-6	2481-2483	is	_	_	
16-7	2484-2491	further	_	_	
16-8	2492-2496	from	_	_	
16-9	2497-2500	the	_	_	
16-10	2501-2505	view	_	_	
16-11	2506-2511	point	_	_	
16-12	2512-2516	than	_	_	
16-13	2517-2520	the	_	_	
16-14	2521-2527	stored	_	_	
16-15	2528-2533	pixel	_	_	
16-16	2533-2534	,	_	_	
16-17	2535-2537	it	_	_	
16-18	2538-2540	is	_	_	
16-19	2541-2549	rejected	_	_	
16-20	2549-2550	.	_	_	

#Text=If not, it replaces the pixel stored in the z-buffer.
17-1	2551-2553	If	_	_	
17-2	2554-2557	not	_	_	
17-3	2557-2558	,	_	_	
17-4	2559-2561	it	_	_	
17-5	2562-2570	replaces	_	_	
17-6	2571-2574	the	_	_	
17-7	2575-2580	pixel	_	_	
17-8	2581-2587	stored	_	_	
17-9	2588-2590	in	_	_	
17-10	2591-2594	the	_	_	
17-11	2595-2603	z-buffer	_	_	
17-12	2603-2604	.	_	_	

#Text=This process continues until an entire frame of pixels is generated.
#Text=[0040] Just as objects can occlude other objects from the perspective of the view point, some objects can occlude other objects from the perspective of a light source.
18-1	2605-2609	This	_	_	
18-2	2610-2617	process	_	_	
18-3	2618-2627	continues	_	_	
18-4	2628-2633	until	_	_	
18-5	2634-2636	an	_	_	
18-6	2637-2643	entire	_	_	
18-7	2644-2649	frame	_	_	
18-8	2650-2652	of	_	_	
18-9	2653-2659	pixels	_	_	
18-10	2660-2662	is	_	_	
18-11	2663-2672	generated	_	_	
18-12	2672-2673	.	_	_	
18-13	2674-2675	[	_	_	
18-14	2675-2679	0040	_	_	
18-15	2679-2680	]	_	_	
18-16	2681-2685	Just	_	_	
18-17	2686-2688	as	_	_	
18-18	2689-2696	objects	_	_	
18-19	2697-2700	can	_	_	
18-20	2701-2708	occlude	_	_	
18-21	2709-2714	other	_	_	
18-22	2715-2722	objects	_	_	
18-23	2723-2727	from	_	_	
18-24	2728-2731	the	_	_	
18-25	2732-2743	perspective	_	_	
18-26	2744-2746	of	_	_	
18-27	2747-2750	the	_	_	
18-28	2751-2755	view	_	_	
18-29	2756-2761	point	_	_	
18-30	2761-2762	,	_	_	
18-31	2763-2767	some	_	_	
18-32	2768-2775	objects	_	_	
18-33	2776-2779	can	_	_	
18-34	2780-2787	occlude	_	_	
18-35	2788-2793	other	_	_	
18-36	2794-2801	objects	_	_	
18-37	2802-2806	from	_	_	
18-38	2807-2810	the	_	_	
18-39	2811-2822	perspective	_	_	
18-40	2823-2825	of	_	_	
18-41	2826-2827	a	_	_	
18-42	2828-2833	light	_	_	
18-43	2834-2840	source	_	_	
18-44	2840-2841	.	_	_	

#Text=In this case, objects closer to the light source can cast a shadow on other objects in the scene.
19-1	2842-2844	In	_	_	
19-2	2845-2849	this	_	_	
19-3	2850-2854	case	_	_	
19-4	2854-2855	,	_	_	
19-5	2856-2863	objects	_	_	
19-6	2864-2870	closer	_	_	
19-7	2871-2873	to	_	_	
19-8	2874-2877	the	_	_	
19-9	2878-2883	light	_	_	
19-10	2884-2890	source	_	_	
19-11	2891-2894	can	_	_	
19-12	2895-2899	cast	_	_	
19-13	2900-2901	a	_	_	
19-14	2902-2908	shadow	_	_	
19-15	2909-2911	on	_	_	
19-16	2912-2917	other	_	_	
19-17	2918-2925	objects	_	_	
19-18	2926-2928	in	_	_	
19-19	2929-2932	the	_	_	
19-20	2933-2938	scene	_	_	
19-21	2938-2939	.	_	_	

#Text="Shadowing" refers to the process of determining which objects are shadowed and then representing those shadows in a rendered image.
#Text=[0041] The following figures are described with the assumption that various graphical programming techniques, such as z-buffering, hidden surface removal algorithms, etc., are well-known.
20-1	2940-2941	"	_	_	
20-2	2941-2950	Shadowing	_	_	
20-3	2950-2951	"	_	_	
20-4	2952-2958	refers	_	_	
20-5	2959-2961	to	_	_	
20-6	2962-2965	the	_	_	
20-7	2966-2973	process	_	_	
20-8	2974-2976	of	_	_	
20-9	2977-2988	determining	_	_	
20-10	2989-2994	which	_	_	
20-11	2995-3002	objects	_	_	
20-12	3003-3006	are	_	_	
20-13	3007-3015	shadowed	_	_	
20-14	3016-3019	and	_	_	
20-15	3020-3024	then	_	_	
20-16	3025-3037	representing	_	_	
20-17	3038-3043	those	_	_	
20-18	3044-3051	shadows	_	_	
20-19	3052-3054	in	_	_	
20-20	3055-3056	a	_	_	
20-21	3057-3065	rendered	_	_	
20-22	3066-3071	image	_	_	
20-23	3071-3072	.	_	_	
20-24	3073-3074	[	_	_	
20-25	3074-3078	0041	_	_	
20-26	3078-3079	]	_	_	
20-27	3080-3083	The	_	_	
20-28	3084-3093	following	_	_	
20-29	3094-3101	figures	_	_	
20-30	3102-3105	are	_	_	
20-31	3106-3115	described	_	_	
20-32	3116-3120	with	_	_	
20-33	3121-3124	the	_	_	
20-34	3125-3135	assumption	_	_	
20-35	3136-3140	that	_	_	
20-36	3141-3148	various	_	_	
20-37	3149-3158	graphical	_	_	
20-38	3159-3170	programming	_	_	
20-39	3171-3181	techniques	_	_	
20-40	3181-3182	,	_	_	
20-41	3183-3187	such	_	_	
20-42	3188-3190	as	_	_	
20-43	3191-3202	z-buffering	_	_	
20-44	3202-3203	,	_	_	
20-45	3204-3210	hidden	_	_	
20-46	3211-3218	surface	_	_	
20-47	3219-3226	removal	_	_	
20-48	3227-3237	algorithms	_	_	
20-49	3237-3238	,	_	_	
20-50	3239-3242	etc	_	_	
20-51	3242-3243	.	_	_	
20-52	3243-3244	,	_	_	
20-53	3245-3248	are	_	_	
20-54	3249-3259	well-known	_	_	
20-55	3259-3260	.	_	_	

#Text=It should also be noted that the graphical programming techniques may be embedded in software, in hardware, or in a combination of both hardware and software.
21-1	3261-3263	It	_	_	
21-2	3264-3270	should	_	_	
21-3	3271-3275	also	_	_	
21-4	3276-3278	be	_	_	
21-5	3279-3284	noted	_	_	
21-6	3285-3289	that	_	_	
21-7	3290-3293	the	_	_	
21-8	3294-3303	graphical	_	_	
21-9	3304-3315	programming	_	_	
21-10	3316-3326	techniques	_	_	
21-11	3327-3330	may	_	_	
21-12	3331-3333	be	_	_	
21-13	3334-3342	embedded	_	_	
21-14	3343-3345	in	_	_	
21-15	3346-3354	software	_	_	
21-16	3354-3355	,	_	_	
21-17	3356-3358	in	_	_	
21-18	3359-3367	hardware	_	_	
21-19	3367-3368	,	_	_	
21-20	3369-3371	or	_	_	
21-21	3372-3374	in	_	_	
21-22	3375-3376	a	_	_	
21-23	3377-3388	combination	_	_	
21-24	3389-3391	of	_	_	
21-25	3392-3396	both	_	_	
21-26	3397-3405	hardware	_	_	
21-27	3406-3409	and	_	_	
21-28	3410-3418	software	_	_	
21-29	3418-3419	.	_	_	
