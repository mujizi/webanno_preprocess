#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Diy_coref|
#T_RL=webanno.custom.Diy_coref_re|BT_webanno.custom.Diy_coref


#Text=Self-Architecting Adaptive Network Solution
#Text=[0295] A self-architecting adaptive network solution system includes embodiments of the present technology.
1-1	0-17	Self-Architecting	_	_	
1-2	18-26	Adaptive	_	_	
1-3	27-34	Network	_	_	
1-4	35-43	Solution	_	_	
1-5	44-45	[	_	_	
1-6	45-49	0295	_	_	
1-7	49-50	]	_	_	
1-8	51-52	A	_	_	
1-9	53-70	self-architecting	*[1]	2-60[2_1]	
1-10	71-79	adaptive	*[1]	_	
1-11	80-87	network	*[1]	_	
1-12	88-96	solution	*[1]	_	
1-13	97-103	system	_	_	
1-14	104-112	includes	_	_	
1-15	113-124	embodiments	_	_	
1-16	125-127	of	_	_	
1-17	128-131	the	_	_	
1-18	132-139	present	_	_	
1-19	140-150	technology	_	_	
1-20	150-151	.	_	_	

#Text=This system automates the design and training of high-complexity self-adaptive networks comprised of a neural-network processing capability, an automated training environment, multilevel cooperative and competitive models, recursive integration with other networks, digital logic elements, and various parametric transforms regulating dynamic redesign, training and feedback.
#Text=[0296] Specifically, the novelty about this solution approach is at least the following: (1) self-architecting, self-adapting capability; (2) recursive modularity within the context of both architecture and adaptation; (3) the approach to the reduction of local minima/maxima traps; and (4) the optional use of an adaptive model to optimize training in resource-limited environments.
#Text=[0297] (1) Self-Architecting, Self-Adapting Capability
#Text=[0298] Regarding the self-architecting/self-adapting capability, multiple network training cycles to automate both the weighting of network connections and the redesign of the network architecture itself are introduced, including a number of nodes, specific connections between nodes, node thresholds, etc.
2-1	152-156	This	_	_	
2-2	157-163	system	_	_	
2-3	164-173	automates	_	_	
2-4	174-177	the	_	_	
2-5	178-184	design	_	_	
2-6	185-188	and	_	_	
2-7	189-197	training	_	_	
2-8	198-200	of	_	_	
2-9	201-216	high-complexity	_	_	
2-10	217-230	self-adaptive	_	_	
2-11	231-239	networks	_	_	
2-12	240-249	comprised	_	_	
2-13	250-252	of	_	_	
2-14	253-254	a	_	_	
2-15	255-269	neural-network	_	_	
2-16	270-280	processing	_	_	
2-17	281-291	capability	_	_	
2-18	291-292	,	_	_	
2-19	293-295	an	_	_	
2-20	296-305	automated	_	_	
2-21	306-314	training	_	_	
2-22	315-326	environment	_	_	
2-23	326-327	,	_	_	
2-24	328-338	multilevel	_	_	
2-25	339-350	cooperative	_	_	
2-26	351-354	and	_	_	
2-27	355-366	competitive	_	_	
2-28	367-373	models	_	_	
2-29	373-374	,	_	_	
2-30	375-384	recursive	_	_	
2-31	385-396	integration	_	_	
2-32	397-401	with	_	_	
2-33	402-407	other	_	_	
2-34	408-416	networks	_	_	
2-35	416-417	,	_	_	
2-36	418-425	digital	_	_	
2-37	426-431	logic	_	_	
2-38	432-440	elements	_	_	
2-39	440-441	,	_	_	
2-40	442-445	and	_	_	
2-41	446-453	various	_	_	
2-42	454-464	parametric	_	_	
2-43	465-475	transforms	_	_	
2-44	476-486	regulating	_	_	
2-45	487-494	dynamic	_	_	
2-46	495-503	redesign	_	_	
2-47	503-504	,	_	_	
2-48	505-513	training	_	_	
2-49	514-517	and	_	_	
2-50	518-526	feedback	_	_	
2-51	526-527	.	_	_	
2-52	528-529	[	_	_	
2-53	529-533	0296	_	_	
2-54	533-534	]	_	_	
2-55	535-547	Specifically	_	_	
2-56	547-548	,	_	_	
2-57	549-552	the	_	_	
2-58	553-560	novelty	_	_	
2-59	561-566	about	_	_	
2-60	567-571	this	*[2]	_	
2-61	572-580	solution	*[2]	_	
2-62	581-589	approach	_	_	
2-63	590-592	is	_	_	
2-64	593-595	at	_	_	
2-65	596-601	least	_	_	
2-66	602-605	the	_	_	
2-67	606-615	following	_	_	
2-68	615-616	:	_	_	
2-69	617-618	(	_	_	
2-70	618-619	1	_	_	
2-71	619-620	)	_	_	
2-72	621-638	self-architecting	_	_	
2-73	638-639	,	_	_	
2-74	640-653	self-adapting	_	_	
2-75	654-664	capability	_	_	
2-76	664-665	;	_	_	
2-77	666-667	(	_	_	
2-78	667-668	2	_	_	
2-79	668-669	)	_	_	
2-80	670-679	recursive	_	_	
2-81	680-690	modularity	_	_	
2-82	691-697	within	_	_	
2-83	698-701	the	_	_	
2-84	702-709	context	_	_	
2-85	710-712	of	_	_	
2-86	713-717	both	_	_	
2-87	718-730	architecture	_	_	
2-88	731-734	and	_	_	
2-89	735-745	adaptation	_	_	
2-90	745-746	;	_	_	
2-91	747-748	(	_	_	
2-92	748-749	3	_	_	
2-93	749-750	)	_	_	
2-94	751-754	the	_	_	
2-95	755-763	approach	_	_	
2-96	764-766	to	_	_	
2-97	767-770	the	_	_	
2-98	771-780	reduction	_	_	
2-99	781-783	of	_	_	
2-100	784-789	local	_	_	
2-101	790-796	minima	_	_	
2-102	796-797	/	_	_	
2-103	797-803	maxima	_	_	
2-104	804-809	traps	_	_	
2-105	809-810	;	_	_	
2-106	811-814	and	_	_	
2-107	815-816	(	_	_	
2-108	816-817	4	_	_	
2-109	817-818	)	_	_	
2-110	819-822	the	_	_	
2-111	823-831	optional	_	_	
2-112	832-835	use	_	_	
2-113	836-838	of	_	_	
2-114	839-841	an	_	_	
2-115	842-850	adaptive	_	_	
2-116	851-856	model	_	_	
2-117	857-859	to	_	_	
2-118	860-868	optimize	_	_	
2-119	869-877	training	_	_	
2-120	878-880	in	_	_	
2-121	881-897	resource-limited	_	_	
2-122	898-910	environments	_	_	
2-123	910-911	.	_	_	
2-124	912-913	[	_	_	
2-125	913-917	0297	_	_	
2-126	917-918	]	_	_	
2-127	919-920	(	_	_	
2-128	920-921	1	_	_	
2-129	921-922	)	_	_	
2-130	923-940	Self-Architecting	_	_	
2-131	940-941	,	_	_	
2-132	942-955	Self-Adapting	_	_	
2-133	956-966	Capability	_	_	
2-134	967-968	[	_	_	
2-135	968-972	0298	_	_	
2-136	972-973	]	_	_	
2-137	974-983	Regarding	_	_	
2-138	984-987	the	_	_	
2-139	988-1005	self-architecting	_	_	
2-140	1005-1006	/	_	_	
2-141	1006-1019	self-adapting	_	_	
2-142	1020-1030	capability	_	_	
2-143	1030-1031	,	_	_	
2-144	1032-1040	multiple	_	_	
2-145	1041-1048	network	_	_	
2-146	1049-1057	training	_	_	
2-147	1058-1064	cycles	_	_	
2-148	1065-1067	to	_	_	
2-149	1068-1076	automate	_	_	
2-150	1077-1081	both	_	_	
2-151	1082-1085	the	_	_	
2-152	1086-1095	weighting	_	_	
2-153	1096-1098	of	_	_	
2-154	1099-1106	network	_	_	
2-155	1107-1118	connections	_	_	
2-156	1119-1122	and	_	_	
2-157	1123-1126	the	_	_	
2-158	1127-1135	redesign	_	_	
2-159	1136-1138	of	_	_	
2-160	1139-1142	the	_	_	
2-161	1143-1150	network	_	_	
2-162	1151-1163	architecture	_	_	
2-163	1164-1170	itself	_	_	
2-164	1171-1174	are	_	_	
2-165	1175-1185	introduced	_	_	
2-166	1185-1186	,	_	_	
2-167	1187-1196	including	_	_	
2-168	1197-1198	a	_	_	
2-169	1199-1205	number	_	_	
2-170	1206-1208	of	_	_	
2-171	1209-1214	nodes	_	_	
2-172	1214-1215	,	_	_	
2-173	1216-1224	specific	_	_	
2-174	1225-1236	connections	_	_	
2-175	1237-1244	between	_	_	
2-176	1245-1250	nodes	_	_	
2-177	1250-1251	,	_	_	
2-178	1252-1256	node	_	_	
2-179	1257-1267	thresholds	_	_	
2-180	1267-1268	,	_	_	
2-181	1269-1272	etc	_	_	
2-182	1272-1273	.	_	_	

#Text=Further, a unique approach to sexual and asexual reproduction is utilized.
3-1	1274-1281	Further	_	_	
3-2	1281-1282	,	_	_	
3-3	1283-1284	a	_	_	
3-4	1285-1291	unique	_	_	
3-5	1292-1300	approach	_	_	
3-6	1301-1303	to	_	_	
3-7	1304-1310	sexual	_	_	
3-8	1311-1314	and	_	_	
3-9	1315-1322	asexual	_	_	
3-10	1323-1335	reproduction	_	_	
3-11	1336-1338	is	_	_	
3-12	1339-1347	utilized	_	_	
3-13	1347-1348	.	_	_	

#Text=Additionally, the parametric redesign utilizes a trained network or parametric transform.
4-1	1349-1361	Additionally	_	_	
4-2	1361-1362	,	_	_	
4-3	1363-1366	the	_	_	
4-4	1367-1377	parametric	_	_	
4-5	1378-1386	redesign	_	_	
4-6	1387-1395	utilizes	_	_	
4-7	1396-1397	a	_	_	
4-8	1398-1405	trained	_	_	
4-9	1406-1413	network	_	_	
4-10	1414-1416	or	_	_	
4-11	1417-1427	parametric	_	_	
4-12	1428-1437	transform	_	_	
4-13	1437-1438	.	_	_	
