Consider the scenario illustrated in FIG. 17 In Release 1, a program's sources include a file directory 450 named/usr/src/project/include. Two of the header files are xtr.h 452 and an architecture-specific header file in a subdirectory 454, vega/backup.h 460. In Release 2, xtr.h disappears, having been merged into product.h 458. In addition, backup.h 460 is made generic, and is moved up into usr/src/project/include 450. The vega 454 subdirectory is deleted.
If, for example, however, while the programming staff is in the midst of Release 3 development, an important customer finds a critical bug in Release 1. It is essential to be able to recompile and debug Release 1. Traditional version-control systems have not had a graceful way to deal with the fact that file xtr.h 452 and subdirectory vega 454 no longer exist. Their only recourse has been to replicate the source tree for Release 1. This incurs a disk-space cost, and effectively destroys the relationship between a file in Release 1 and the same file in Release 2.
The version-control system of this invention solves this problem by capturing the source directory structure, and the changes to this structure, as versions of directory elements. Each version of a directory element is analogous to a standard UNIX directory. A UNIX directory is list of names, each of which has a pointer (i-number) to a file system object, a file, directory, and so on. A version of a directory element of this invention is a list of names, each of which has a pointer to another object in the same VOB, a file element, a directory element, or a VOB symbolic link.
In many respect, directory elements resemble file elements. In particular, each view provides transparent access to a selected version of each directory element. Within the context of that view, the directory version behaves like a standard UNIX directory.
FIG. 18 shows that more than one name can be associated with the same element. In this example, product.h and prd.h both correspond to the same file element 458). Each such association of a name with an element is called a VOB hard link.