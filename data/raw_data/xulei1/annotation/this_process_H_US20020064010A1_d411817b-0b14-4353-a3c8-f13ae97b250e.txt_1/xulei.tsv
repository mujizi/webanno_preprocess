#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Diy_coref|
#T_RL=webanno.custom.Diy_coref_re|BT_webanno.custom.Diy_coref


#Text=[0047] Each of the nodes is connected to a communications channel 110.
1-1	0-1	[	_	_	
1-2	1-5	0047	_	_	
1-3	5-6	]	_	_	
1-4	7-11	Each	_	_	
1-5	12-14	of	_	_	
1-6	15-18	the	_	_	
1-7	19-24	nodes	_	_	
1-8	25-27	is	_	_	
1-9	28-37	connected	_	_	
1-10	38-40	to	_	_	
1-11	41-42	a	_	_	
1-12	43-57	communications	_	_	
1-13	58-65	channel	_	_	
1-14	66-69	110	_	_	
1-15	69-70	.	_	_	

#Text=Any type of communications channel can be used.
2-1	71-74	Any	_	_	
2-2	75-79	type	_	_	
2-3	80-82	of	_	_	
2-4	83-97	communications	_	_	
2-5	98-105	channel	_	_	
2-6	106-109	can	_	_	
2-7	110-112	be	_	_	
2-8	113-117	used	_	_	
2-9	117-118	.	_	_	

#Text=In the present invention, for example, the communications channel could be telephone, radio, the Internet, or fiber optic cable.
#Text=[0048] FIG. 3 is a flow diagram which illustrates the operation of a synchronization counter and state selection process run by each node in accordance with the presently preferred embodiment.
3-1	119-121	In	_	_	
3-2	122-125	the	_	_	
3-3	126-133	present	_	_	
3-4	134-143	invention	_	_	
3-5	143-144	,	_	_	
3-6	145-148	for	_	_	
3-7	149-156	example	_	_	
3-8	156-157	,	_	_	
3-9	158-161	the	_	_	
3-10	162-176	communications	_	_	
3-11	177-184	channel	_	_	
3-12	185-190	could	_	_	
3-13	191-193	be	_	_	
3-14	194-203	telephone	_	_	
3-15	203-204	,	_	_	
3-16	205-210	radio	_	_	
3-17	210-211	,	_	_	
3-18	212-215	the	_	_	
3-19	216-224	Internet	_	_	
3-20	224-225	,	_	_	
3-21	226-228	or	_	_	
3-22	229-234	fiber	_	_	
3-23	235-240	optic	_	_	
3-24	241-246	cable	_	_	
3-25	246-247	.	_	_	
3-26	248-249	[	*[1]	4-2[2_1]	
3-27	249-253	0048	*[1]	_	
3-28	253-254	]	*[1]	_	
3-29	255-258	FIG	*[1]	_	
3-30	258-259	.	*[1]	_	
3-31	260-261	3	*[1]	_	
3-32	262-264	is	*[1]	_	
3-33	265-266	a	*[1]	_	
3-34	267-271	flow	*[1]	_	
3-35	272-279	diagram	*[1]	_	
3-36	280-285	which	*[1]	_	
3-37	286-297	illustrates	*[1]	_	
3-38	298-301	the	*[1]	_	
3-39	302-311	operation	*[1]	_	
3-40	312-314	of	*[1]	_	
3-41	315-316	a	*[1]	_	
3-42	317-332	synchronization	*[1]	_	
3-43	333-340	counter	*[1]	_	
3-44	341-344	and	*[1]	_	
3-45	345-350	state	*[1]	_	
3-46	351-360	selection	*[1]	_	
3-47	361-368	process	*[1]	_	
3-48	369-372	run	*[1]	_	
3-49	373-375	by	*[1]	_	
3-50	376-380	each	*[1]	_	
3-51	381-385	node	*[1]	_	
3-52	386-388	in	*[1]	_	
3-53	389-399	accordance	*[1]	_	
3-54	400-404	with	*[1]	_	
3-55	405-408	the	*[1]	_	
3-56	409-418	presently	*[1]	_	
3-57	419-428	preferred	*[1]	_	
3-58	429-439	embodiment	*[1]	_	
3-59	439-440	.	*[1]	_	

#Text=In this process the nodes update their timer and database sequence counter which are used to synchronize the nodes with each other.
4-1	441-443	In	_	_	
4-2	444-448	this	*[2]	_	
4-3	449-456	process	*[2]	_	
4-4	457-460	the	_	_	
4-5	461-466	nodes	_	_	
4-6	467-473	update	_	_	
4-7	474-479	their	_	_	
4-8	480-485	timer	_	_	
4-9	486-489	and	_	_	
4-10	490-498	database	_	_	
4-11	499-507	sequence	_	_	
4-12	508-515	counter	_	_	
4-13	516-521	which	_	_	
4-14	522-525	are	_	_	
4-15	526-530	used	_	_	
4-16	531-533	to	_	_	
4-17	534-545	synchronize	_	_	
4-18	546-549	the	_	_	
4-19	550-555	nodes	_	_	
4-20	556-560	with	_	_	
4-21	561-565	each	_	_	
4-22	566-571	other	_	_	
4-23	571-572	.	_	_	

#Text=The nodes then check for error conditions and set error flags if errors are found and determine from their database which state they are in: synchronization, integrity check, or reconfiguration event.
5-1	573-576	The	_	_	
5-2	577-582	nodes	_	_	
5-3	583-587	then	_	_	
5-4	588-593	check	_	_	
5-5	594-597	for	_	_	
5-6	598-603	error	_	_	
5-7	604-614	conditions	_	_	
5-8	615-618	and	_	_	
5-9	619-622	set	_	_	
5-10	623-628	error	_	_	
5-11	629-634	flags	_	_	
5-12	635-637	if	_	_	
5-13	638-644	errors	_	_	
5-14	645-648	are	_	_	
5-15	649-654	found	_	_	
5-16	655-658	and	_	_	
5-17	659-668	determine	_	_	
5-18	669-673	from	_	_	
5-19	674-679	their	_	_	
5-20	680-688	database	_	_	
5-21	689-694	which	_	_	
5-22	695-700	state	_	_	
5-23	701-705	they	_	_	
5-24	706-709	are	_	_	
5-25	710-712	in	_	_	
5-26	712-713	:	_	_	
5-27	714-729	synchronization	_	_	
5-28	729-730	,	_	_	
5-29	731-740	integrity	_	_	
5-30	741-746	check	_	_	
5-31	746-747	,	_	_	
5-32	748-750	or	_	_	
5-33	751-766	reconfiguration	_	_	
5-34	767-772	event	_	_	
5-35	772-773	.	_	_	

#Text=An enhancement to the synchronization process is the addition of step 315 to provide protective devices with "advance notice" of their protective characteristics prior to a reconfiguration even such that initial restoration of the circuit may begin prior to adjustment of protective device profiles if the prior settings are adequate.
#Text=[0049] FIG. 4 is a flow diagram which illustrates the operation of the synchronization process state run by each node in accordance with the presently preferred embodiment.
6-1	774-776	An	_	_	
6-2	777-788	enhancement	_	_	
6-3	789-791	to	_	_	
6-4	792-795	the	_	_	
6-5	796-811	synchronization	_	_	
6-6	812-819	process	_	_	
6-7	820-822	is	_	_	
6-8	823-826	the	_	_	
6-9	827-835	addition	_	_	
6-10	836-838	of	_	_	
6-11	839-843	step	_	_	
6-12	844-847	315	_	_	
6-13	848-850	to	_	_	
6-14	851-858	provide	_	_	
6-15	859-869	protective	_	_	
6-16	870-877	devices	_	_	
6-17	878-882	with	_	_	
6-18	883-884	"	_	_	
6-19	884-891	advance	_	_	
6-20	892-898	notice	_	_	
6-21	898-899	"	_	_	
6-22	900-902	of	_	_	
6-23	903-908	their	_	_	
6-24	909-919	protective	_	_	
6-25	920-935	characteristics	_	_	
6-26	936-941	prior	_	_	
6-27	942-944	to	_	_	
6-28	945-946	a	_	_	
6-29	947-962	reconfiguration	_	_	
6-30	963-967	even	_	_	
6-31	968-972	such	_	_	
6-32	973-977	that	_	_	
6-33	978-985	initial	_	_	
6-34	986-997	restoration	_	_	
6-35	998-1000	of	_	_	
6-36	1001-1004	the	_	_	
6-37	1005-1012	circuit	_	_	
6-38	1013-1016	may	_	_	
6-39	1017-1022	begin	_	_	
6-40	1023-1028	prior	_	_	
6-41	1029-1031	to	_	_	
6-42	1032-1042	adjustment	_	_	
6-43	1043-1045	of	_	_	
6-44	1046-1056	protective	_	_	
6-45	1057-1063	device	_	_	
6-46	1064-1072	profiles	_	_	
6-47	1073-1075	if	_	_	
6-48	1076-1079	the	_	_	
6-49	1080-1085	prior	_	_	
6-50	1086-1094	settings	_	_	
6-51	1095-1098	are	_	_	
6-52	1099-1107	adequate	_	_	
6-53	1107-1108	.	_	_	
6-54	1109-1110	[	_	_	
6-55	1110-1114	0049	_	_	
6-56	1114-1115	]	_	_	
6-57	1116-1119	FIG	_	_	
6-58	1119-1120	.	_	_	
6-59	1121-1122	4	_	_	
6-60	1123-1125	is	_	_	
6-61	1126-1127	a	_	_	
6-62	1128-1132	flow	_	_	
6-63	1133-1140	diagram	_	_	
6-64	1141-1146	which	_	_	
6-65	1147-1158	illustrates	_	_	
6-66	1159-1162	the	_	_	
6-67	1163-1172	operation	_	_	
6-68	1173-1175	of	_	_	
6-69	1176-1179	the	_	_	
6-70	1180-1195	synchronization	_	_	
6-71	1196-1203	process	_	_	
6-72	1204-1209	state	_	_	
6-73	1210-1213	run	_	_	
6-74	1214-1216	by	_	_	
6-75	1217-1221	each	_	_	
6-76	1222-1226	node	_	_	
6-77	1227-1229	in	_	_	
6-78	1230-1240	accordance	_	_	
6-79	1241-1245	with	_	_	
6-80	1246-1249	the	_	_	
6-81	1250-1259	presently	_	_	
6-82	1260-1269	preferred	_	_	
6-83	1270-1280	embodiment	_	_	
6-84	1280-1281	.	_	_	

#Text=In this state the nodes construct a database of critical control information about the distribution system.
7-1	1282-1284	In	_	_	
7-2	1285-1289	this	_	_	
7-3	1290-1295	state	_	_	
7-4	1296-1299	the	_	_	
7-5	1300-1305	nodes	_	_	
7-6	1306-1315	construct	_	_	
7-7	1316-1317	a	_	_	
7-8	1318-1326	database	_	_	
7-9	1327-1329	of	_	_	
7-10	1330-1338	critical	_	_	
7-11	1339-1346	control	_	_	
7-12	1347-1358	information	_	_	
7-13	1359-1364	about	_	_	
7-14	1365-1368	the	_	_	
7-15	1369-1381	distribution	_	_	
7-16	1382-1388	system	_	_	
7-17	1388-1389	.	_	_	

#Text=All nodes contribute to the construction of a database.
8-1	1390-1393	All	_	_	
8-2	1394-1399	nodes	_	_	
8-3	1400-1410	contribute	_	_	
8-4	1411-1413	to	_	_	
8-5	1414-1417	the	_	_	
8-6	1418-1430	construction	_	_	
8-7	1431-1433	of	_	_	
8-8	1434-1435	a	_	_	
8-9	1436-1444	database	_	_	
8-10	1444-1445	.	_	_	

#Text=Each node stores in its memory a copy of the database.
9-1	1446-1450	Each	_	_	
9-2	1451-1455	node	_	_	
9-3	1456-1462	stores	_	_	
9-4	1463-1465	in	_	_	
9-5	1466-1469	its	_	_	
9-6	1470-1476	memory	_	_	
9-7	1477-1478	a	_	_	
9-8	1479-1483	copy	_	_	
9-9	1484-1486	of	_	_	
9-10	1487-1490	the	_	_	
9-11	1491-1499	database	_	_	
9-12	1499-1500	.	_	_	

#Text=The steps in constructing the database in accordance with the presently preferred embodiment are as follows: each node receives the database from the previous node, adds its own record of information and passes the database on to the next node.
10-1	1501-1504	The	*[3]	11-1[4_3]	
10-2	1505-1510	steps	*[3]	_	
10-3	1511-1513	in	*[3]	_	
10-4	1514-1526	constructing	*[3]	_	
10-5	1527-1530	the	*[3]	_	
10-6	1531-1539	database	*[3]	_	
10-7	1540-1542	in	*[3]	_	
10-8	1543-1553	accordance	*[3]	_	
10-9	1554-1558	with	*[3]	_	
10-10	1559-1562	the	*[3]	_	
10-11	1563-1572	presently	*[3]	_	
10-12	1573-1582	preferred	*[3]	_	
10-13	1583-1593	embodiment	*[3]	_	
10-14	1594-1597	are	*[3]	_	
10-15	1598-1600	as	*[3]	_	
10-16	1601-1608	follows	*[3]	_	
10-17	1608-1609	:	*[3]	_	
10-18	1610-1614	each	*[3]	_	
10-19	1615-1619	node	*[3]	_	
10-20	1620-1628	receives	*[3]	_	
10-21	1629-1632	the	*[3]	_	
10-22	1633-1641	database	*[3]	_	
10-23	1642-1646	from	*[3]	_	
10-24	1647-1650	the	*[3]	_	
10-25	1651-1659	previous	*[3]	_	
10-26	1660-1664	node	*[3]	_	
10-27	1664-1665	,	*[3]	_	
10-28	1666-1670	adds	*[3]	_	
10-29	1671-1674	its	*[3]	_	
10-30	1675-1678	own	*[3]	_	
10-31	1679-1685	record	*[3]	_	
10-32	1686-1688	of	*[3]	_	
10-33	1689-1700	information	*[3]	_	
10-34	1701-1704	and	*[3]	_	
10-35	1705-1711	passes	*[3]	_	
10-36	1712-1715	the	*[3]	_	
10-37	1716-1724	database	*[3]	_	
10-38	1725-1727	on	*[3]	_	
10-39	1728-1730	to	*[3]	_	
10-40	1731-1734	the	*[3]	_	
10-41	1735-1739	next	*[3]	_	
10-42	1740-1744	node	*[3]	_	
10-43	1744-1745	.	*[3]	_	

#Text=This process continues until all nodes have received a record from every other node.
11-1	1746-1750	This	*[4]	_	
11-2	1751-1758	process	*[4]	_	
11-3	1759-1768	continues	_	_	
11-4	1769-1774	until	_	_	
11-5	1775-1778	all	_	_	
11-6	1779-1784	nodes	_	_	
11-7	1785-1789	have	_	_	
11-8	1790-1798	received	_	_	
11-9	1799-1800	a	_	_	
11-10	1801-1807	record	_	_	
11-11	1808-1812	from	_	_	
11-12	1813-1818	every	_	_	
11-13	1819-1824	other	_	_	
11-14	1825-1829	node	_	_	
11-15	1829-1830	.	_	_	

#Text=Once this process is compete, each node then proceeds to the integrity check state shown in FIG. 5
#Text=[0050] FIG. 5 is a flow diagram which illustrates the operation of the integrity check state process run by each node in accordance with the presently preferred embodiment.
12-1	1831-1835	Once	_	_	
12-2	1836-1840	this	_	_	
12-3	1841-1848	process	_	_	
12-4	1849-1851	is	_	_	
12-5	1852-1859	compete	_	_	
12-6	1859-1860	,	_	_	
12-7	1861-1865	each	_	_	
12-8	1866-1870	node	_	_	
12-9	1871-1875	then	_	_	
12-10	1876-1884	proceeds	_	_	
12-11	1885-1887	to	_	_	
12-12	1888-1891	the	_	_	
12-13	1892-1901	integrity	_	_	
12-14	1902-1907	check	_	_	
12-15	1908-1913	state	_	_	
12-16	1914-1919	shown	_	_	
12-17	1920-1922	in	_	_	
12-18	1923-1926	FIG	_	_	
12-19	1926-1927	.	_	_	
12-20	1928-1929	5	_	_	
12-21	1930-1931	[	_	_	
12-22	1931-1935	0050	_	_	
12-23	1935-1936	]	_	_	
12-24	1937-1940	FIG	_	_	
12-25	1940-1941	.	_	_	
12-26	1942-1943	5	_	_	
12-27	1944-1946	is	_	_	
12-28	1947-1948	a	_	_	
12-29	1949-1953	flow	_	_	
12-30	1954-1961	diagram	_	_	
12-31	1962-1967	which	_	_	
12-32	1968-1979	illustrates	_	_	
12-33	1980-1983	the	_	_	
12-34	1984-1993	operation	_	_	
12-35	1994-1996	of	_	_	
12-36	1997-2000	the	_	_	
12-37	2001-2010	integrity	_	_	
12-38	2011-2016	check	_	_	
12-39	2017-2022	state	_	_	
12-40	2023-2030	process	_	_	
12-41	2031-2034	run	_	_	
12-42	2035-2037	by	_	_	
12-43	2038-2042	each	_	_	
12-44	2043-2047	node	_	_	
12-45	2048-2050	in	_	_	
12-46	2051-2061	accordance	_	_	
12-47	2062-2066	with	_	_	
12-48	2067-2070	the	_	_	
12-49	2071-2080	presently	_	_	
12-50	2081-2090	preferred	_	_	
12-51	2091-2101	embodiment	_	_	
12-52	2101-2102	.	_	_	

#Text=When a node runs this process, it checks the records it has received from all the other nodes to ensure that the records reflect a timely version of the state of the system.
#Text=[0051] FIGS. 6 is a flow diagram which illustrates the operation of the transfer process state in accordance with the presently preferred embodiment.
13-1	2103-2107	When	_	_	
13-2	2108-2109	a	_	_	
13-3	2110-2114	node	_	_	
13-4	2115-2119	runs	_	_	
13-5	2120-2124	this	_	_	
13-6	2125-2132	process	_	_	
13-7	2132-2133	,	_	_	
13-8	2134-2136	it	_	_	
13-9	2137-2143	checks	_	_	
13-10	2144-2147	the	_	_	
13-11	2148-2155	records	_	_	
13-12	2156-2158	it	_	_	
13-13	2159-2162	has	_	_	
13-14	2163-2171	received	_	_	
13-15	2172-2176	from	_	_	
13-16	2177-2180	all	_	_	
13-17	2181-2184	the	_	_	
13-18	2185-2190	other	_	_	
13-19	2191-2196	nodes	_	_	
13-20	2197-2199	to	_	_	
13-21	2200-2206	ensure	_	_	
13-22	2207-2211	that	_	_	
13-23	2212-2215	the	_	_	
13-24	2216-2223	records	_	_	
13-25	2224-2231	reflect	_	_	
13-26	2232-2233	a	_	_	
13-27	2234-2240	timely	_	_	
13-28	2241-2248	version	_	_	
13-29	2249-2251	of	_	_	
13-30	2252-2255	the	_	_	
13-31	2256-2261	state	_	_	
13-32	2262-2264	of	_	_	
13-33	2265-2268	the	_	_	
13-34	2269-2275	system	_	_	
13-35	2275-2276	.	_	_	
13-36	2277-2278	[	_	_	
13-37	2278-2282	0051	_	_	
13-38	2282-2283	]	_	_	
13-39	2284-2288	FIGS	_	_	
13-40	2288-2289	.	_	_	
13-41	2290-2291	6	_	_	
13-42	2292-2294	is	_	_	
13-43	2295-2296	a	_	_	
13-44	2297-2301	flow	_	_	
13-45	2302-2309	diagram	_	_	
13-46	2310-2315	which	_	_	
13-47	2316-2327	illustrates	_	_	
13-48	2328-2331	the	_	_	
13-49	2332-2341	operation	_	_	
13-50	2342-2344	of	_	_	
13-51	2345-2348	the	_	_	
13-52	2349-2357	transfer	_	_	
13-53	2358-2365	process	_	_	
13-54	2366-2371	state	_	_	
13-55	2372-2374	in	_	_	
13-56	2375-2385	accordance	_	_	
13-57	2386-2390	with	_	_	
13-58	2391-2394	the	_	_	
13-59	2395-2404	presently	_	_	
13-60	2405-2414	preferred	_	_	
13-61	2415-2425	embodiment	_	_	
13-62	2425-2426	.	_	_	

#Text=This flow diagram describes the process used by each node upon the occurrence of a fault in the system followed by standalone sectionalization.
14-1	2427-2431	This	*[5]	15-1[6_5]	
14-2	2432-2436	flow	*[5]	_	
14-3	2437-2444	diagram	*[5]	_	
14-4	2445-2454	describes	*[5]	_	
14-5	2455-2458	the	*[5]	_	
14-6	2459-2466	process	*[5]	_	
14-7	2467-2471	used	*[5]	_	
14-8	2472-2474	by	*[5]	_	
14-9	2475-2479	each	*[5]	_	
14-10	2480-2484	node	*[5]	_	
14-11	2485-2489	upon	*[5]	_	
14-12	2490-2493	the	*[5]	_	
14-13	2494-2504	occurrence	*[5]	_	
14-14	2505-2507	of	*[5]	_	
14-15	2508-2509	a	*[5]	_	
14-16	2510-2515	fault	*[5]	_	
14-17	2516-2518	in	*[5]	_	
14-18	2519-2522	the	*[5]	_	
14-19	2523-2529	system	*[5]	_	
14-20	2530-2538	followed	*[5]	_	
14-21	2539-2541	by	*[5]	_	
14-22	2542-2552	standalone	*[5]	_	
14-23	2553-2569	sectionalization	*[5]	_	
14-24	2569-2570	.	*[5]	_	

#Text=This process is also started in a node when the node receives a message that another node has entered this process.
15-1	2571-2575	This	*[6]	_	
15-2	2576-2583	process	*[6]	_	
15-3	2584-2586	is	_	_	
15-4	2587-2591	also	_	_	
15-5	2592-2599	started	_	_	
15-6	2600-2602	in	_	_	
15-7	2603-2604	a	_	_	
15-8	2605-2609	node	_	_	
15-9	2610-2614	when	_	_	
15-10	2615-2618	the	_	_	
15-11	2619-2623	node	_	_	
15-12	2624-2632	receives	_	_	
15-13	2633-2634	a	_	_	
15-14	2635-2642	message	_	_	
15-15	2643-2647	that	_	_	
15-16	2648-2655	another	_	_	
15-17	2656-2660	node	_	_	
15-18	2661-2664	has	_	_	
15-19	2665-2672	entered	_	_	
15-20	2673-2677	this	_	_	
15-21	2678-2685	process	_	_	
15-22	2685-2686	.	_	_	

#Text=In order to restore electric power service to as many users as possible after a fault has occurred, each node will use this process to determine if it can close its associated switch(es).
16-1	2687-2689	In	_	_	
16-2	2690-2695	order	_	_	
16-3	2696-2698	to	_	_	
16-4	2699-2706	restore	_	_	
16-5	2707-2715	electric	_	_	
16-6	2716-2721	power	_	_	
16-7	2722-2729	service	_	_	
16-8	2730-2732	to	_	_	
16-9	2733-2735	as	_	_	
16-10	2736-2740	many	_	_	
16-11	2741-2746	users	_	_	
16-12	2747-2749	as	_	_	
16-13	2750-2758	possible	_	_	
16-14	2759-2764	after	_	_	
16-15	2765-2766	a	_	_	
16-16	2767-2772	fault	_	_	
16-17	2773-2776	has	_	_	
16-18	2777-2785	occurred	_	_	
16-19	2785-2786	,	_	_	
16-20	2787-2791	each	_	_	
16-21	2792-2796	node	_	_	
16-22	2797-2801	will	_	_	
16-23	2802-2805	use	_	_	
16-24	2806-2810	this	_	_	
16-25	2811-2818	process	_	_	
16-26	2819-2821	to	_	_	
16-27	2822-2831	determine	_	_	
16-28	2832-2834	if	_	_	
16-29	2835-2837	it	_	_	
16-30	2838-2841	can	_	_	
16-31	2842-2847	close	_	_	
16-32	2848-2851	its	_	_	
16-33	2852-2862	associated	_	_	
16-34	2863-2869	switch	_	_	
16-35	2869-2870	(	_	_	
16-36	2870-2872	es	_	_	
16-37	2872-2873	)	_	_	
16-38	2873-2874	.	_	_	

#Text=The present invention extends the functionality of the transfer logic to insure that the protection settings match the requirements of the transfer (steps 645-654).
17-1	2875-2878	The	_	_	
17-2	2879-2886	present	_	_	
17-3	2887-2896	invention	_	_	
17-4	2897-2904	extends	_	_	
17-5	2905-2908	the	_	_	
17-6	2909-2922	functionality	_	_	
17-7	2923-2925	of	_	_	
17-8	2926-2929	the	_	_	
17-9	2930-2938	transfer	_	_	
17-10	2939-2944	logic	_	_	
17-11	2945-2947	to	_	_	
17-12	2948-2954	insure	_	_	
17-13	2955-2959	that	_	_	
17-14	2960-2963	the	_	_	
17-15	2964-2974	protection	_	_	
17-16	2975-2983	settings	_	_	
17-17	2984-2989	match	_	_	
17-18	2990-2993	the	_	_	
17-19	2994-3006	requirements	_	_	
17-20	3007-3009	of	_	_	
17-21	3010-3013	the	_	_	
17-22	3014-3022	transfer	_	_	
17-23	3023-3024	(	_	_	
17-24	3024-3029	steps	_	_	
17-25	3030-3033	645	_	_	
17-26	3033-3034	-	_	_	
17-27	3034-3037	654	_	_	
17-28	3037-3038	)	_	_	
17-29	3038-3039	.	_	_	
