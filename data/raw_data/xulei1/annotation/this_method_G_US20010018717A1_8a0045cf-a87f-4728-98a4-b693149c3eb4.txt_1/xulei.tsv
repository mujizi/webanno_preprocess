#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Diy_coref|
#T_RL=webanno.custom.Diy_coref_re|BT_webanno.custom.Diy_coref


#Text=[0007] (3) The boot selector occupies a unique basic region as an activation partition, and although one OS, as viewed from the ROM code, is first activated, subsequently another OS is activated.
#Text=[0008] According to all of these OS switching methods, the images of the individual OSs are stored in independent partitions on a hard disk, and boot selectors are provided that can activate only an OS that is stored in a specific partition, that can select and activate an OS that is stored in the only partition on a single hard disk, and that can select and activate an OS that is stored in specific partitions on a plurality of hard disks.
#Text=[0009] According to the method by which emulation is used to provide for a base OS the functions of another, predetermined OS, a virtual operating environment for the predetermined OS is constructed within the operating environment of the base OS, and even an application for which the predetermined OS environment is an imperative can be run in the environment provided by the base OS.
1-1	0-1	[	_	_	
1-2	1-5	0007	_	_	
1-3	5-6	]	_	_	
1-4	7-8	(	_	_	
1-5	8-9	3	_	_	
1-6	9-10	)	_	_	
1-7	11-14	The	_	_	
1-8	15-19	boot	_	_	
1-9	20-28	selector	_	_	
1-10	29-37	occupies	_	_	
1-11	38-39	a	_	_	
1-12	40-46	unique	_	_	
1-13	47-52	basic	_	_	
1-14	53-59	region	_	_	
1-15	60-62	as	_	_	
1-16	63-65	an	_	_	
1-17	66-76	activation	_	_	
1-18	77-86	partition	_	_	
1-19	86-87	,	_	_	
1-20	88-91	and	_	_	
1-21	92-100	although	_	_	
1-22	101-104	one	_	_	
1-23	105-107	OS	_	_	
1-24	107-108	,	_	_	
1-25	109-111	as	_	_	
1-26	112-118	viewed	_	_	
1-27	119-123	from	_	_	
1-28	124-127	the	_	_	
1-29	128-131	ROM	_	_	
1-30	132-136	code	_	_	
1-31	136-137	,	_	_	
1-32	138-140	is	_	_	
1-33	141-146	first	_	_	
1-34	147-156	activated	_	_	
1-35	156-157	,	_	_	
1-36	158-170	subsequently	_	_	
1-37	171-178	another	_	_	
1-38	179-181	OS	_	_	
1-39	182-184	is	_	_	
1-40	185-194	activated	_	_	
1-41	194-195	.	_	_	
1-42	196-197	[	_	_	
1-43	197-201	0008	_	_	
1-44	201-202	]	_	_	
1-45	203-212	According	_	_	
1-46	213-215	to	_	_	
1-47	216-219	all	_	_	
1-48	220-222	of	_	_	
1-49	223-228	these	_	_	
1-50	229-231	OS	_	_	
1-51	232-241	switching	_	_	
1-52	242-249	methods	_	_	
1-53	249-250	,	_	_	
1-54	251-254	the	_	_	
1-55	255-261	images	_	_	
1-56	262-264	of	_	_	
1-57	265-268	the	_	_	
1-58	269-279	individual	_	_	
1-59	280-283	OSs	_	_	
1-60	284-287	are	_	_	
1-61	288-294	stored	_	_	
1-62	295-297	in	_	_	
1-63	298-309	independent	_	_	
1-64	310-320	partitions	_	_	
1-65	321-323	on	_	_	
1-66	324-325	a	_	_	
1-67	326-330	hard	_	_	
1-68	331-335	disk	_	_	
1-69	335-336	,	_	_	
1-70	337-340	and	_	_	
1-71	341-345	boot	_	_	
1-72	346-355	selectors	_	_	
1-73	356-359	are	_	_	
1-74	360-368	provided	_	_	
1-75	369-373	that	_	_	
1-76	374-377	can	_	_	
1-77	378-386	activate	_	_	
1-78	387-391	only	_	_	
1-79	392-394	an	_	_	
1-80	395-397	OS	_	_	
1-81	398-402	that	_	_	
1-82	403-405	is	_	_	
1-83	406-412	stored	_	_	
1-84	413-415	in	_	_	
1-85	416-417	a	_	_	
1-86	418-426	specific	_	_	
1-87	427-436	partition	_	_	
1-88	436-437	,	_	_	
1-89	438-442	that	_	_	
1-90	443-446	can	_	_	
1-91	447-453	select	_	_	
1-92	454-457	and	_	_	
1-93	458-466	activate	_	_	
1-94	467-469	an	_	_	
1-95	470-472	OS	_	_	
1-96	473-477	that	_	_	
1-97	478-480	is	_	_	
1-98	481-487	stored	_	_	
1-99	488-490	in	_	_	
1-100	491-494	the	_	_	
1-101	495-499	only	_	_	
1-102	500-509	partition	_	_	
1-103	510-512	on	_	_	
1-104	513-514	a	_	_	
1-105	515-521	single	_	_	
1-106	522-526	hard	_	_	
1-107	527-531	disk	_	_	
1-108	531-532	,	_	_	
1-109	533-536	and	_	_	
1-110	537-541	that	_	_	
1-111	542-545	can	_	_	
1-112	546-552	select	_	_	
1-113	553-556	and	_	_	
1-114	557-565	activate	_	_	
1-115	566-568	an	_	_	
1-116	569-571	OS	_	_	
1-117	572-576	that	_	_	
1-118	577-579	is	_	_	
1-119	580-586	stored	_	_	
1-120	587-589	in	_	_	
1-121	590-598	specific	_	_	
1-122	599-609	partitions	_	_	
1-123	610-612	on	_	_	
1-124	613-614	a	_	_	
1-125	615-624	plurality	_	_	
1-126	625-627	of	_	_	
1-127	628-632	hard	_	_	
1-128	633-638	disks	_	_	
1-129	638-639	.	_	_	
1-130	640-641	[	*[1]	2-7[2_1]	
1-131	641-645	0009	*[1]	_	
1-132	645-646	]	*[1]	_	
1-133	647-656	According	*[1]	_	
1-134	657-659	to	*[1]	_	
1-135	660-663	the	*[1]	_	
1-136	664-670	method	*[1]	_	
1-137	671-673	by	*[1]	_	
1-138	674-679	which	*[1]	_	
1-139	680-689	emulation	*[1]	_	
1-140	690-692	is	*[1]	_	
1-141	693-697	used	*[1]	_	
1-142	698-700	to	*[1]	_	
1-143	701-708	provide	*[1]	_	
1-144	709-712	for	*[1]	_	
1-145	713-714	a	*[1]	_	
1-146	715-719	base	*[1]	_	
1-147	720-722	OS	*[1]	_	
1-148	723-726	the	*[1]	_	
1-149	727-736	functions	*[1]	_	
1-150	737-739	of	*[1]	_	
1-151	740-747	another	*[1]	_	
1-152	747-748	,	*[1]	_	
1-153	749-762	predetermined	*[1]	_	
1-154	763-765	OS	*[1]	_	
1-155	765-766	,	*[1]	_	
1-156	767-768	a	*[1]	_	
1-157	769-776	virtual	*[1]	_	
1-158	777-786	operating	*[1]	_	
1-159	787-798	environment	*[1]	_	
1-160	799-802	for	*[1]	_	
1-161	803-806	the	*[1]	_	
1-162	807-820	predetermined	*[1]	_	
1-163	821-823	OS	*[1]	_	
1-164	824-826	is	*[1]	_	
1-165	827-838	constructed	*[1]	_	
1-166	839-845	within	*[1]	_	
1-167	846-849	the	*[1]	_	
1-168	850-859	operating	*[1]	_	
1-169	860-871	environment	*[1]	_	
1-170	872-874	of	*[1]	_	
1-171	875-878	the	*[1]	_	
1-172	879-883	base	*[1]	_	
1-173	884-886	OS	*[1]	_	
1-174	886-887	,	*[1]	_	
1-175	888-891	and	*[1]	_	
1-176	892-896	even	*[1]	_	
1-177	897-899	an	*[1]	_	
1-178	900-911	application	*[1]	_	
1-179	912-915	for	*[1]	_	
1-180	916-921	which	*[1]	_	
1-181	922-925	the	*[1]	_	
1-182	926-939	predetermined	*[1]	_	
1-183	940-942	OS	*[1]	_	
1-184	943-954	environment	*[1]	_	
1-185	955-957	is	*[1]	_	
1-186	958-960	an	*[1]	_	
1-187	961-971	imperative	*[1]	_	
1-188	972-975	can	*[1]	_	
1-189	976-978	be	*[1]	_	
1-190	979-982	run	*[1]	_	
1-191	983-985	in	*[1]	_	
1-192	986-989	the	*[1]	_	
1-193	990-1001	environment	*[1]	_	
1-194	1002-1010	provided	*[1]	_	
1-195	1011-1013	by	*[1]	_	
1-196	1014-1017	the	*[1]	_	
1-197	1018-1022	base	*[1]	_	
1-198	1023-1025	OS	*[1]	_	
1-199	1025-1026	.	*[1]	_	

#Text=That is, in accordance with this method, a plurality of OSs do not coexist; a layer is simply implemented that provides functions equivalent to a service provision layer, so that an application that depends on the services provided (via an API: Application Program Interface) by an OS can be run by another OS.
#Text=[0010] The conventional technique by which a plurality of OSs in a single system are switched and employed has the following problem.
#Text=[0011] According to the method for changing the OSs at boot time, while the coexistence of a plurality of OSs in a single system is implemented, the OSs are changed by rebooting, so that in each instance an extended period of time is required.
2-1	1027-1031	That	_	_	
2-2	1032-1034	is	_	_	
2-3	1034-1035	,	_	_	
2-4	1036-1038	in	_	_	
2-5	1039-1049	accordance	_	_	
2-6	1050-1054	with	_	_	
2-7	1055-1059	this	*[2]	_	
2-8	1060-1066	method	*[2]	_	
2-9	1066-1067	,	_	_	
2-10	1068-1069	a	_	_	
2-11	1070-1079	plurality	_	_	
2-12	1080-1082	of	_	_	
2-13	1083-1086	OSs	_	_	
2-14	1087-1089	do	_	_	
2-15	1090-1093	not	_	_	
2-16	1094-1101	coexist	_	_	
2-17	1101-1102	;	_	_	
2-18	1103-1104	a	_	_	
2-19	1105-1110	layer	_	_	
2-20	1111-1113	is	_	_	
2-21	1114-1120	simply	_	_	
2-22	1121-1132	implemented	_	_	
2-23	1133-1137	that	_	_	
2-24	1138-1146	provides	_	_	
2-25	1147-1156	functions	_	_	
2-26	1157-1167	equivalent	_	_	
2-27	1168-1170	to	_	_	
2-28	1171-1172	a	_	_	
2-29	1173-1180	service	_	_	
2-30	1181-1190	provision	_	_	
2-31	1191-1196	layer	_	_	
2-32	1196-1197	,	_	_	
2-33	1198-1200	so	_	_	
2-34	1201-1205	that	_	_	
2-35	1206-1208	an	_	_	
2-36	1209-1220	application	_	_	
2-37	1221-1225	that	_	_	
2-38	1226-1233	depends	_	_	
2-39	1234-1236	on	_	_	
2-40	1237-1240	the	_	_	
2-41	1241-1249	services	_	_	
2-42	1250-1258	provided	_	_	
2-43	1259-1260	(	_	_	
2-44	1260-1263	via	_	_	
2-45	1264-1266	an	_	_	
2-46	1267-1270	API	_	_	
2-47	1270-1271	:	_	_	
2-48	1272-1283	Application	_	_	
2-49	1284-1291	Program	_	_	
2-50	1292-1301	Interface	_	_	
2-51	1301-1302	)	_	_	
2-52	1303-1305	by	_	_	
2-53	1306-1308	an	_	_	
2-54	1309-1311	OS	_	_	
2-55	1312-1315	can	_	_	
2-56	1316-1318	be	_	_	
2-57	1319-1322	run	_	_	
2-58	1323-1325	by	_	_	
2-59	1326-1333	another	_	_	
2-60	1334-1336	OS	_	_	
2-61	1336-1337	.	_	_	
2-62	1338-1339	[	_	_	
2-63	1339-1343	0010	_	_	
2-64	1343-1344	]	_	_	
2-65	1345-1348	The	_	_	
2-66	1349-1361	conventional	_	_	
2-67	1362-1371	technique	_	_	
2-68	1372-1374	by	_	_	
2-69	1375-1380	which	_	_	
2-70	1381-1382	a	_	_	
2-71	1383-1392	plurality	_	_	
2-72	1393-1395	of	_	_	
2-73	1396-1399	OSs	_	_	
2-74	1400-1402	in	_	_	
2-75	1403-1404	a	_	_	
2-76	1405-1411	single	_	_	
2-77	1412-1418	system	_	_	
2-78	1419-1422	are	_	_	
2-79	1423-1431	switched	_	_	
2-80	1432-1435	and	_	_	
2-81	1436-1444	employed	_	_	
2-82	1445-1448	has	_	_	
2-83	1449-1452	the	_	_	
2-84	1453-1462	following	_	_	
2-85	1463-1470	problem	_	_	
2-86	1470-1471	.	_	_	
2-87	1472-1473	[	_	_	
2-88	1473-1477	0011	_	_	
2-89	1477-1478	]	_	_	
2-90	1479-1488	According	_	_	
2-91	1489-1491	to	_	_	
2-92	1492-1495	the	_	_	
2-93	1496-1502	method	_	_	
2-94	1503-1506	for	_	_	
2-95	1507-1515	changing	_	_	
2-96	1516-1519	the	_	_	
2-97	1520-1523	OSs	_	_	
2-98	1524-1526	at	_	_	
2-99	1527-1531	boot	_	_	
2-100	1532-1536	time	_	_	
2-101	1536-1537	,	_	_	
2-102	1538-1543	while	_	_	
2-103	1544-1547	the	_	_	
2-104	1548-1559	coexistence	_	_	
2-105	1560-1562	of	_	_	
2-106	1563-1564	a	_	_	
2-107	1565-1574	plurality	_	_	
2-108	1575-1577	of	_	_	
2-109	1578-1581	OSs	_	_	
2-110	1582-1584	in	_	_	
2-111	1585-1586	a	_	_	
2-112	1587-1593	single	_	_	
2-113	1594-1600	system	_	_	
2-114	1601-1603	is	_	_	
2-115	1604-1615	implemented	_	_	
2-116	1615-1616	,	_	_	
2-117	1617-1620	the	_	_	
2-118	1621-1624	OSs	_	_	
2-119	1625-1628	are	_	_	
2-120	1629-1636	changed	_	_	
2-121	1637-1639	by	_	_	
2-122	1640-1649	rebooting	_	_	
2-123	1649-1650	,	_	_	
2-124	1651-1653	so	_	_	
2-125	1654-1658	that	_	_	
2-126	1659-1661	in	_	_	
2-127	1662-1666	each	_	_	
2-128	1667-1675	instance	_	_	
2-129	1676-1678	an	_	_	
2-130	1679-1687	extended	_	_	
2-131	1688-1694	period	_	_	
2-132	1695-1697	of	_	_	
2-133	1698-1702	time	_	_	
2-134	1703-1705	is	_	_	
2-135	1706-1714	required	_	_	
2-136	1714-1715	.	_	_	

#Text=That is, to change OSs, the processing sequence includes shutting down a currently running OS, activating the ROM and then activating the next OS, and thus, before the OSs can finally be switched, a finite period of time is required to perform each, individual process.
3-1	1716-1720	That	_	_	
3-2	1721-1723	is	_	_	
3-3	1723-1724	,	_	_	
3-4	1725-1727	to	_	_	
3-5	1728-1734	change	_	_	
3-6	1735-1738	OSs	_	_	
3-7	1738-1739	,	_	_	
3-8	1740-1743	the	_	_	
3-9	1744-1754	processing	_	_	
3-10	1755-1763	sequence	_	_	
3-11	1764-1772	includes	_	_	
3-12	1773-1781	shutting	_	_	
3-13	1782-1786	down	_	_	
3-14	1787-1788	a	_	_	
3-15	1789-1798	currently	_	_	
3-16	1799-1806	running	_	_	
3-17	1807-1809	OS	_	_	
3-18	1809-1810	,	_	_	
3-19	1811-1821	activating	_	_	
3-20	1822-1825	the	_	_	
3-21	1826-1829	ROM	_	_	
3-22	1830-1833	and	_	_	
3-23	1834-1838	then	_	_	
3-24	1839-1849	activating	_	_	
3-25	1850-1853	the	_	_	
3-26	1854-1858	next	_	_	
3-27	1859-1861	OS	_	_	
3-28	1861-1862	,	_	_	
3-29	1863-1866	and	_	_	
3-30	1867-1871	thus	_	_	
3-31	1871-1872	,	_	_	
3-32	1873-1879	before	_	_	
3-33	1880-1883	the	_	_	
3-34	1884-1887	OSs	_	_	
3-35	1888-1891	can	_	_	
3-36	1892-1899	finally	_	_	
3-37	1900-1902	be	_	_	
3-38	1903-1911	switched	_	_	
3-39	1911-1912	,	_	_	
3-40	1913-1914	a	_	_	
3-41	1915-1921	finite	_	_	
3-42	1922-1928	period	_	_	
3-43	1929-1931	of	_	_	
3-44	1932-1936	time	_	_	
3-45	1937-1939	is	_	_	
3-46	1940-1948	required	_	_	
3-47	1949-1951	to	_	_	
3-48	1952-1959	perform	_	_	
3-49	1960-1964	each	_	_	
3-50	1964-1965	,	_	_	
3-51	1966-1976	individual	_	_	
3-52	1977-1984	process	_	_	
3-53	1984-1985	.	_	_	

#Text=Therefore, in this case, usability is inferior.
4-1	1986-1995	Therefore	_	_	
4-2	1995-1996	,	_	_	
4-3	1997-1999	in	_	_	
4-4	2000-2004	this	_	_	
4-5	2005-2009	case	_	_	
4-6	2009-2010	,	_	_	
4-7	2011-2020	usability	_	_	
4-8	2021-2023	is	_	_	
4-9	2024-2032	inferior	_	_	
4-10	2032-2033	.	_	_	
