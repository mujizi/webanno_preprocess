#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Diy_coref|
#T_RL=webanno.custom.Diy_coref_re|BT_webanno.custom.Diy_coref


#Text=[0049] FIG. 4 is a flow diagram which illustrates the operation of the synchronization process state run by each node in accordance with the presently preferred embodiment.
1-1	0-1	[	_	_	
1-2	1-5	0049	_	_	
1-3	5-6	]	_	_	
1-4	7-10	FIG	_	_	
1-5	10-11	.	_	_	
1-6	12-13	4	_	_	
1-7	14-16	is	_	_	
1-8	17-18	a	_	_	
1-9	19-23	flow	_	_	
1-10	24-31	diagram	_	_	
1-11	32-37	which	_	_	
1-12	38-49	illustrates	_	_	
1-13	50-53	the	_	_	
1-14	54-63	operation	_	_	
1-15	64-66	of	_	_	
1-16	67-70	the	_	_	
1-17	71-86	synchronization	_	_	
1-18	87-94	process	_	_	
1-19	95-100	state	_	_	
1-20	101-104	run	_	_	
1-21	105-107	by	_	_	
1-22	108-112	each	_	_	
1-23	113-117	node	_	_	
1-24	118-120	in	_	_	
1-25	121-131	accordance	_	_	
1-26	132-136	with	_	_	
1-27	137-140	the	_	_	
1-28	141-150	presently	_	_	
1-29	151-160	preferred	_	_	
1-30	161-171	embodiment	_	_	
1-31	171-172	.	_	_	

#Text=In this state the nodes construct a database of critical control information about the distribution system.
2-1	173-175	In	_	_	
2-2	176-180	this	_	_	
2-3	181-186	state	_	_	
2-4	187-190	the	_	_	
2-5	191-196	nodes	_	_	
2-6	197-206	construct	_	_	
2-7	207-208	a	_	_	
2-8	209-217	database	_	_	
2-9	218-220	of	_	_	
2-10	221-229	critical	_	_	
2-11	230-237	control	_	_	
2-12	238-249	information	_	_	
2-13	250-255	about	_	_	
2-14	256-259	the	_	_	
2-15	260-272	distribution	_	_	
2-16	273-279	system	_	_	
2-17	279-280	.	_	_	

#Text=All nodes contribute to the construction of a database.
3-1	281-284	All	_	_	
3-2	285-290	nodes	_	_	
3-3	291-301	contribute	_	_	
3-4	302-304	to	_	_	
3-5	305-308	the	_	_	
3-6	309-321	construction	_	_	
3-7	322-324	of	_	_	
3-8	325-326	a	_	_	
3-9	327-335	database	_	_	
3-10	335-336	.	_	_	

#Text=Each node stores in its memory a copy of the database.
4-1	337-341	Each	_	_	
4-2	342-346	node	_	_	
4-3	347-353	stores	_	_	
4-4	354-356	in	_	_	
4-5	357-360	its	_	_	
4-6	361-367	memory	_	_	
4-7	368-369	a	_	_	
4-8	370-374	copy	_	_	
4-9	375-377	of	_	_	
4-10	378-381	the	_	_	
4-11	382-390	database	_	_	
4-12	390-391	.	_	_	

#Text=The steps in constructing the database in accordance with the presently preferred embodiment are as follows: each node receives the database from the previous node, adds its own record of information and passes the database on to the next node.
5-1	392-395	The	_	_	
5-2	396-401	steps	_	_	
5-3	402-404	in	_	_	
5-4	405-417	constructing	_	_	
5-5	418-421	the	_	_	
5-6	422-430	database	_	_	
5-7	431-433	in	_	_	
5-8	434-444	accordance	_	_	
5-9	445-449	with	_	_	
5-10	450-453	the	_	_	
5-11	454-463	presently	_	_	
5-12	464-473	preferred	_	_	
5-13	474-484	embodiment	_	_	
5-14	485-488	are	_	_	
5-15	489-491	as	_	_	
5-16	492-499	follows	_	_	
5-17	499-500	:	_	_	
5-18	501-505	each	_	_	
5-19	506-510	node	_	_	
5-20	511-519	receives	_	_	
5-21	520-523	the	_	_	
5-22	524-532	database	_	_	
5-23	533-537	from	_	_	
5-24	538-541	the	_	_	
5-25	542-550	previous	_	_	
5-26	551-555	node	_	_	
5-27	555-556	,	_	_	
5-28	557-561	adds	_	_	
5-29	562-565	its	_	_	
5-30	566-569	own	_	_	
5-31	570-576	record	_	_	
5-32	577-579	of	_	_	
5-33	580-591	information	_	_	
5-34	592-595	and	_	_	
5-35	596-602	passes	_	_	
5-36	603-606	the	_	_	
5-37	607-615	database	_	_	
5-38	616-618	on	_	_	
5-39	619-621	to	_	_	
5-40	622-625	the	_	_	
5-41	626-630	next	_	_	
5-42	631-635	node	_	_	
5-43	635-636	.	_	_	

#Text=This process continues until all nodes have received a record from every other node.
6-1	637-641	This	_	_	
6-2	642-649	process	_	_	
6-3	650-659	continues	_	_	
6-4	660-665	until	_	_	
6-5	666-669	all	_	_	
6-6	670-675	nodes	_	_	
6-7	676-680	have	_	_	
6-8	681-689	received	_	_	
6-9	690-691	a	_	_	
6-10	692-698	record	_	_	
6-11	699-703	from	_	_	
6-12	704-709	every	_	_	
6-13	710-715	other	_	_	
6-14	716-720	node	_	_	
6-15	720-721	.	_	_	

#Text=Once this process is compete, each node then proceeds to the integrity check state shown in FIG. 5
#Text=[0050] FIG. 5 is a flow diagram which illustrates the operation of the integrity check state process run by each node in accordance with the presently preferred embodiment.
7-1	722-726	Once	_	_	
7-2	727-731	this	_	_	
7-3	732-739	process	_	_	
7-4	740-742	is	_	_	
7-5	743-750	compete	_	_	
7-6	750-751	,	_	_	
7-7	752-756	each	_	_	
7-8	757-761	node	_	_	
7-9	762-766	then	_	_	
7-10	767-775	proceeds	_	_	
7-11	776-778	to	_	_	
7-12	779-782	the	_	_	
7-13	783-792	integrity	_	_	
7-14	793-798	check	_	_	
7-15	799-804	state	_	_	
7-16	805-810	shown	_	_	
7-17	811-813	in	_	_	
7-18	814-817	FIG	_	_	
7-19	817-818	.	_	_	
7-20	819-820	5	_	_	
7-21	821-822	[	*[1]	8-5[2_1]	
7-22	822-826	0050	*[1]	_	
7-23	826-827	]	*[1]	_	
7-24	828-831	FIG	*[1]	_	
7-25	831-832	.	*[1]	_	
7-26	833-834	5	*[1]	_	
7-27	835-837	is	*[1]	_	
7-28	838-839	a	*[1]	_	
7-29	840-844	flow	*[1]	_	
7-30	845-852	diagram	*[1]	_	
7-31	853-858	which	*[1]	_	
7-32	859-870	illustrates	*[1]	_	
7-33	871-874	the	*[1]	_	
7-34	875-884	operation	*[1]	_	
7-35	885-887	of	*[1]	_	
7-36	888-891	the	*[1]	_	
7-37	892-901	integrity	*[1]	_	
7-38	902-907	check	*[1]	_	
7-39	908-913	state	*[1]	_	
7-40	914-921	process	*[1]	_	
7-41	922-925	run	*[1]	_	
7-42	926-928	by	*[1]	_	
7-43	929-933	each	*[1]	_	
7-44	934-938	node	*[1]	_	
7-45	939-941	in	*[1]	_	
7-46	942-952	accordance	*[1]	_	
7-47	953-957	with	*[1]	_	
7-48	958-961	the	*[1]	_	
7-49	962-971	presently	*[1]	_	
7-50	972-981	preferred	*[1]	_	
7-51	982-992	embodiment	*[1]	_	
7-52	992-993	.	*[1]	_	

#Text=When a node runs this process, it checks the records it has received from all the other nodes to ensure that the records reflect a timely version of the state of the system.
#Text=[0051] FIGS. 6 is a flow diagram which illustrates the operation of the transfer process state in accordance with the presently preferred embodiment.
8-1	994-998	When	_	_	
8-2	999-1000	a	_	_	
8-3	1001-1005	node	_	_	
8-4	1006-1010	runs	_	_	
8-5	1011-1015	this	*[2]	_	
8-6	1016-1023	process	*[2]	_	
8-7	1023-1024	,	_	_	
8-8	1025-1027	it	_	_	
8-9	1028-1034	checks	_	_	
8-10	1035-1038	the	_	_	
8-11	1039-1046	records	_	_	
8-12	1047-1049	it	_	_	
8-13	1050-1053	has	_	_	
8-14	1054-1062	received	_	_	
8-15	1063-1067	from	_	_	
8-16	1068-1071	all	_	_	
8-17	1072-1075	the	_	_	
8-18	1076-1081	other	_	_	
8-19	1082-1087	nodes	_	_	
8-20	1088-1090	to	_	_	
8-21	1091-1097	ensure	_	_	
8-22	1098-1102	that	_	_	
8-23	1103-1106	the	_	_	
8-24	1107-1114	records	_	_	
8-25	1115-1122	reflect	_	_	
8-26	1123-1124	a	_	_	
8-27	1125-1131	timely	_	_	
8-28	1132-1139	version	_	_	
8-29	1140-1142	of	_	_	
8-30	1143-1146	the	_	_	
8-31	1147-1152	state	_	_	
8-32	1153-1155	of	_	_	
8-33	1156-1159	the	_	_	
8-34	1160-1166	system	_	_	
8-35	1166-1167	.	_	_	
8-36	1168-1169	[	*[3]	10-1[4_3]	
8-37	1169-1173	0051	*[3]	_	
8-38	1173-1174	]	*[3]	_	
8-39	1175-1179	FIGS	*[3]	_	
8-40	1179-1180	.	*[3]	_	
8-41	1181-1182	6	*[3]	_	
8-42	1183-1185	is	*[3]	_	
8-43	1186-1187	a	*[3]	_	
8-44	1188-1192	flow	*[3]	_	
8-45	1193-1200	diagram	*[3]	_	
8-46	1201-1206	which	*[3]	_	
8-47	1207-1218	illustrates	*[3]	_	
8-48	1219-1222	the	*[3]	_	
8-49	1223-1232	operation	*[3]	_	
8-50	1233-1235	of	*[3]	_	
8-51	1236-1239	the	*[3]	_	
8-52	1240-1248	transfer	*[3]	_	
8-53	1249-1256	process	*[3]	_	
8-54	1257-1262	state	*[3]	_	
8-55	1263-1265	in	*[3]	_	
8-56	1266-1276	accordance	*[3]	_	
8-57	1277-1281	with	*[3]	_	
8-58	1282-1285	the	*[3]	_	
8-59	1286-1295	presently	*[3]	_	
8-60	1296-1305	preferred	*[3]	_	
8-61	1306-1316	embodiment	*[3]	_	
8-62	1316-1317	.	*[3]	_	

#Text=This flow diagram describes the process used by each node upon the occurrence of a fault in the system followed by standalone sectionalization.
9-1	1318-1322	This	*[3]	_	
9-2	1323-1327	flow	*[3]	_	
9-3	1328-1335	diagram	*[3]	_	
9-4	1336-1345	describes	*[3]	_	
9-5	1346-1349	the	*[3]	_	
9-6	1350-1357	process	*[3]	_	
9-7	1358-1362	used	*[3]	_	
9-8	1363-1365	by	*[3]	_	
9-9	1366-1370	each	*[3]	_	
9-10	1371-1375	node	*[3]	_	
9-11	1376-1380	upon	*[3]	_	
9-12	1381-1384	the	*[3]	_	
9-13	1385-1395	occurrence	*[3]	_	
9-14	1396-1398	of	*[3]	_	
9-15	1399-1400	a	*[3]	_	
9-16	1401-1406	fault	*[3]	_	
9-17	1407-1409	in	*[3]	_	
9-18	1410-1413	the	*[3]	_	
9-19	1414-1420	system	*[3]	_	
9-20	1421-1429	followed	*[3]	_	
9-21	1430-1432	by	*[3]	_	
9-22	1433-1443	standalone	*[3]	_	
9-23	1444-1460	sectionalization	*[3]	_	
9-24	1460-1461	.	*[3]	_	

#Text=This process is also started in a node when the node receives a message that another node has entered this process.
10-1	1462-1466	This	*[4]	_	
10-2	1467-1474	process	*[4]	_	
10-3	1475-1477	is	_	_	
10-4	1478-1482	also	_	_	
10-5	1483-1490	started	_	_	
10-6	1491-1493	in	_	_	
10-7	1494-1495	a	_	_	
10-8	1496-1500	node	_	_	
10-9	1501-1505	when	_	_	
10-10	1506-1509	the	_	_	
10-11	1510-1514	node	_	_	
10-12	1515-1523	receives	_	_	
10-13	1524-1525	a	_	_	
10-14	1526-1533	message	_	_	
10-15	1534-1538	that	_	_	
10-16	1539-1546	another	_	_	
10-17	1547-1551	node	_	_	
10-18	1552-1555	has	_	_	
10-19	1556-1563	entered	_	_	
10-20	1564-1568	this	_	_	
10-21	1569-1576	process	_	_	
10-22	1576-1577	.	_	_	

#Text=In order to restore electric power service to as many users as possible after a fault has occurred, each node will use this process to determine if it can close its associated switch(es).
11-1	1578-1580	In	_	_	
11-2	1581-1586	order	_	_	
11-3	1587-1589	to	_	_	
11-4	1590-1597	restore	_	_	
11-5	1598-1606	electric	_	_	
11-6	1607-1612	power	_	_	
11-7	1613-1620	service	_	_	
11-8	1621-1623	to	_	_	
11-9	1624-1626	as	_	_	
11-10	1627-1631	many	_	_	
11-11	1632-1637	users	_	_	
11-12	1638-1640	as	_	_	
11-13	1641-1649	possible	_	_	
11-14	1650-1655	after	_	_	
11-15	1656-1657	a	_	_	
11-16	1658-1663	fault	_	_	
11-17	1664-1667	has	_	_	
11-18	1668-1676	occurred	_	_	
11-19	1676-1677	,	_	_	
11-20	1678-1682	each	_	_	
11-21	1683-1687	node	_	_	
11-22	1688-1692	will	_	_	
11-23	1693-1696	use	_	_	
11-24	1697-1701	this	_	_	
11-25	1702-1709	process	_	_	
11-26	1710-1712	to	_	_	
11-27	1713-1722	determine	_	_	
11-28	1723-1725	if	_	_	
11-29	1726-1728	it	_	_	
11-30	1729-1732	can	_	_	
11-31	1733-1738	close	_	_	
11-32	1739-1742	its	_	_	
11-33	1743-1753	associated	_	_	
11-34	1754-1760	switch	_	_	
11-35	1760-1761	(	_	_	
11-36	1761-1763	es	_	_	
11-37	1763-1764	)	_	_	
11-38	1764-1765	.	_	_	

#Text=The present invention extends the functionality of the transfer logic to insure that the protection settings match the requirements of the transfer (steps 645-654).
#Text=[0052] FIG. 7 describes the logic used by each node to return the distribution system to its normal state once the fault has been cleared.
12-1	1766-1769	The	_	_	
12-2	1770-1777	present	_	_	
12-3	1778-1787	invention	_	_	
12-4	1788-1795	extends	_	_	
12-5	1796-1799	the	_	_	
12-6	1800-1813	functionality	_	_	
12-7	1814-1816	of	_	_	
12-8	1817-1820	the	_	_	
12-9	1821-1829	transfer	_	_	
12-10	1830-1835	logic	_	_	
12-11	1836-1838	to	_	_	
12-12	1839-1845	insure	_	_	
12-13	1846-1850	that	_	_	
12-14	1851-1854	the	_	_	
12-15	1855-1865	protection	_	_	
12-16	1866-1874	settings	_	_	
12-17	1875-1880	match	_	_	
12-18	1881-1884	the	_	_	
12-19	1885-1897	requirements	_	_	
12-20	1898-1900	of	_	_	
12-21	1901-1904	the	_	_	
12-22	1905-1913	transfer	_	_	
12-23	1914-1915	(	_	_	
12-24	1915-1920	steps	_	_	
12-25	1921-1924	645	_	_	
12-26	1924-1925	-	_	_	
12-27	1925-1928	654	_	_	
12-28	1928-1929	)	_	_	
12-29	1929-1930	.	_	_	
12-30	1931-1932	[	_	_	
12-31	1932-1936	0052	_	_	
12-32	1936-1937	]	_	_	
12-33	1938-1941	FIG	_	_	
12-34	1941-1942	.	_	_	
12-35	1943-1944	7	_	_	
12-36	1945-1954	describes	_	_	
12-37	1955-1958	the	_	_	
12-38	1959-1964	logic	_	_	
12-39	1965-1969	used	_	_	
12-40	1970-1972	by	_	_	
12-41	1973-1977	each	_	_	
12-42	1978-1982	node	_	_	
12-43	1983-1985	to	_	_	
12-44	1986-1992	return	_	_	
12-45	1993-1996	the	_	_	
12-46	1997-2009	distribution	_	_	
12-47	2010-2016	system	_	_	
12-48	2017-2019	to	_	_	
12-49	2020-2023	its	_	_	
12-50	2024-2030	normal	_	_	
12-51	2031-2036	state	_	_	
12-52	2037-2041	once	_	_	
12-53	2042-2045	the	_	_	
12-54	2046-2051	fault	_	_	
12-55	2052-2055	has	_	_	
12-56	2056-2060	been	_	_	
12-57	2061-2068	cleared	_	_	
12-58	2068-2069	.	_	_	

#Text=The present invention extends the functionality of the return-to-normal logic to insure that the protection settings match the requirements of the return-to-normal transition, particularly when the "closed" transition is used (steps 722 and 750-752).
#Text=[0053] FIG. 8 is a flow diagram which illustrates the operation of a task timer that is used during the transfer process state of FIG. 6 and the return to normal process state of FIG. 7 in order ensure that the system does not take too much time to complete the steps required in either of these processes.
13-1	2070-2073	The	_	_	
13-2	2074-2081	present	_	_	
13-3	2082-2091	invention	_	_	
13-4	2092-2099	extends	_	_	
13-5	2100-2103	the	_	_	
13-6	2104-2117	functionality	_	_	
13-7	2118-2120	of	_	_	
13-8	2121-2124	the	_	_	
13-9	2125-2141	return-to-normal	_	_	
13-10	2142-2147	logic	_	_	
13-11	2148-2150	to	_	_	
13-12	2151-2157	insure	_	_	
13-13	2158-2162	that	_	_	
13-14	2163-2166	the	_	_	
13-15	2167-2177	protection	_	_	
13-16	2178-2186	settings	_	_	
13-17	2187-2192	match	_	_	
13-18	2193-2196	the	_	_	
13-19	2197-2209	requirements	_	_	
13-20	2210-2212	of	_	_	
13-21	2213-2216	the	_	_	
13-22	2217-2233	return-to-normal	_	_	
13-23	2234-2244	transition	_	_	
13-24	2244-2245	,	_	_	
13-25	2246-2258	particularly	_	_	
13-26	2259-2263	when	_	_	
13-27	2264-2267	the	_	_	
13-28	2268-2269	"	_	_	
13-29	2269-2275	closed	_	_	
13-30	2275-2276	"	_	_	
13-31	2277-2287	transition	_	_	
13-32	2288-2290	is	_	_	
13-33	2291-2295	used	_	_	
13-34	2296-2297	(	_	_	
13-35	2297-2302	steps	_	_	
13-36	2303-2306	722	_	_	
13-37	2307-2310	and	_	_	
13-38	2311-2314	750	_	_	
13-39	2314-2315	-	_	_	
13-40	2315-2318	752	_	_	
13-41	2318-2319	)	_	_	
13-42	2319-2320	.	_	_	
13-43	2321-2322	[	_	_	
13-44	2322-2326	0053	_	_	
13-45	2326-2327	]	_	_	
13-46	2328-2331	FIG	_	_	
13-47	2331-2332	.	_	_	
13-48	2333-2334	8	_	_	
13-49	2335-2337	is	_	_	
13-50	2338-2339	a	_	_	
13-51	2340-2344	flow	_	_	
13-52	2345-2352	diagram	_	_	
13-53	2353-2358	which	_	_	
13-54	2359-2370	illustrates	_	_	
13-55	2371-2374	the	_	_	
13-56	2375-2384	operation	_	_	
13-57	2385-2387	of	_	_	
13-58	2388-2389	a	_	_	
13-59	2390-2394	task	_	_	
13-60	2395-2400	timer	_	_	
13-61	2401-2405	that	_	_	
13-62	2406-2408	is	_	_	
13-63	2409-2413	used	_	_	
13-64	2414-2420	during	_	_	
13-65	2421-2424	the	_	_	
13-66	2425-2433	transfer	_	_	
13-67	2434-2441	process	_	_	
13-68	2442-2447	state	_	_	
13-69	2448-2450	of	_	_	
13-70	2451-2454	FIG	_	_	
13-71	2454-2455	.	_	_	
13-72	2456-2457	6	_	_	
13-73	2458-2461	and	_	_	
13-74	2462-2465	the	_	_	
13-75	2466-2472	return	_	_	
13-76	2473-2475	to	_	_	
13-77	2476-2482	normal	_	_	
13-78	2483-2490	process	_	_	
13-79	2491-2496	state	_	_	
13-80	2497-2499	of	_	_	
13-81	2500-2503	FIG	_	_	
13-82	2503-2504	.	_	_	
13-83	2505-2506	7	_	_	
13-84	2507-2509	in	_	_	
13-85	2510-2515	order	_	_	
13-86	2516-2522	ensure	_	_	
13-87	2523-2527	that	_	_	
13-88	2528-2531	the	_	_	
13-89	2532-2538	system	_	_	
13-90	2539-2543	does	_	_	
13-91	2544-2547	not	_	_	
13-92	2548-2552	take	_	_	
13-93	2553-2556	too	_	_	
13-94	2557-2561	much	_	_	
13-95	2562-2566	time	_	_	
13-96	2567-2569	to	_	_	
13-97	2570-2578	complete	_	_	
13-98	2579-2582	the	_	_	
13-99	2583-2588	steps	_	_	
13-100	2589-2597	required	_	_	
13-101	2598-2600	in	_	_	
13-102	2601-2607	either	_	_	
13-103	2608-2610	of	_	_	
13-104	2611-2616	these	_	_	
13-105	2617-2626	processes	_	_	
13-106	2626-2627	.	_	_	

#Text=The present invention extends the functionality of the return-to-normal logic to reset the protection settings when the return-to-normal transition, and in particular when the "closed" transition return-to-normal is used (steps 830-831).
14-1	2628-2631	The	_	_	
14-2	2632-2639	present	_	_	
14-3	2640-2649	invention	_	_	
14-4	2650-2657	extends	_	_	
14-5	2658-2661	the	_	_	
14-6	2662-2675	functionality	_	_	
14-7	2676-2678	of	_	_	
14-8	2679-2682	the	_	_	
14-9	2683-2699	return-to-normal	_	_	
14-10	2700-2705	logic	_	_	
14-11	2706-2708	to	_	_	
14-12	2709-2714	reset	_	_	
14-13	2715-2718	the	_	_	
14-14	2719-2729	protection	_	_	
14-15	2730-2738	settings	_	_	
14-16	2739-2743	when	_	_	
14-17	2744-2747	the	_	_	
14-18	2748-2764	return-to-normal	_	_	
14-19	2765-2775	transition	_	_	
14-20	2775-2776	,	_	_	
14-21	2777-2780	and	_	_	
14-22	2781-2783	in	_	_	
14-23	2784-2794	particular	_	_	
14-24	2795-2799	when	_	_	
14-25	2800-2803	the	_	_	
14-26	2804-2805	"	_	_	
14-27	2805-2811	closed	_	_	
14-28	2811-2812	"	_	_	
14-29	2813-2823	transition	_	_	
14-30	2824-2840	return-to-normal	_	_	
14-31	2841-2843	is	_	_	
14-32	2844-2848	used	_	_	
14-33	2849-2850	(	_	_	
14-34	2850-2855	steps	_	_	
14-35	2856-2859	830	_	_	
14-36	2859-2860	-	_	_	
14-37	2860-2863	831	_	_	
14-38	2863-2864	)	_	_	
14-39	2864-2865	.	_	_	
