#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Diy_coref|
#T_RL=webanno.custom.Diy_coref_re|BT_webanno.custom.Diy_coref


#Text=[0048] FIG. 3 is a flow diagram which illustrates the operation of a synchronization counter and state selection process run by each node in accordance with the presently preferred embodiment.
1-1	0-1	[	*[1]	2-2[2_1]	
1-2	1-5	0048	*[1]	_	
1-3	5-6	]	*[1]	_	
1-4	7-10	FIG	*[1]	_	
1-5	10-11	.	*[1]	_	
1-6	12-13	3	*[1]	_	
1-7	14-16	is	*[1]	_	
1-8	17-18	a	*[1]	_	
1-9	19-23	flow	*[1]	_	
1-10	24-31	diagram	*[1]	_	
1-11	32-37	which	*[1]	_	
1-12	38-49	illustrates	*[1]	_	
1-13	50-53	the	*[1]	_	
1-14	54-63	operation	*[1]	_	
1-15	64-66	of	*[1]	_	
1-16	67-68	a	*[1]	_	
1-17	69-84	synchronization	*[1]	_	
1-18	85-92	counter	*[1]	_	
1-19	93-96	and	*[1]	_	
1-20	97-102	state	*[1]	_	
1-21	103-112	selection	*[1]	_	
1-22	113-120	process	*[1]	_	
1-23	121-124	run	*[1]	_	
1-24	125-127	by	*[1]	_	
1-25	128-132	each	*[1]	_	
1-26	133-137	node	*[1]	_	
1-27	138-140	in	*[1]	_	
1-28	141-151	accordance	*[1]	_	
1-29	152-156	with	*[1]	_	
1-30	157-160	the	*[1]	_	
1-31	161-170	presently	*[1]	_	
1-32	171-180	preferred	*[1]	_	
1-33	181-191	embodiment	*[1]	_	
1-34	191-192	.	*[1]	_	

#Text=In this process the nodes update their timer and database sequence counter which are used to synchronize the nodes with each other.
2-1	193-195	In	_	_	
2-2	196-200	this	*[2]	_	
2-3	201-208	process	*[2]	_	
2-4	209-212	the	_	_	
2-5	213-218	nodes	_	_	
2-6	219-225	update	_	_	
2-7	226-231	their	_	_	
2-8	232-237	timer	_	_	
2-9	238-241	and	_	_	
2-10	242-250	database	_	_	
2-11	251-259	sequence	_	_	
2-12	260-267	counter	_	_	
2-13	268-273	which	_	_	
2-14	274-277	are	_	_	
2-15	278-282	used	_	_	
2-16	283-285	to	_	_	
2-17	286-297	synchronize	_	_	
2-18	298-301	the	_	_	
2-19	302-307	nodes	_	_	
2-20	308-312	with	_	_	
2-21	313-317	each	_	_	
2-22	318-323	other	_	_	
2-23	323-324	.	_	_	

#Text=The nodes then check for error conditions and set error flags if errors are found and determine from their database which state they are in: synchronization, integrity check, or reconfiguration event.
3-1	325-328	The	_	_	
3-2	329-334	nodes	_	_	
3-3	335-339	then	_	_	
3-4	340-345	check	_	_	
3-5	346-349	for	_	_	
3-6	350-355	error	_	_	
3-7	356-366	conditions	_	_	
3-8	367-370	and	_	_	
3-9	371-374	set	_	_	
3-10	375-380	error	_	_	
3-11	381-386	flags	_	_	
3-12	387-389	if	_	_	
3-13	390-396	errors	_	_	
3-14	397-400	are	_	_	
3-15	401-406	found	_	_	
3-16	407-410	and	_	_	
3-17	411-420	determine	_	_	
3-18	421-425	from	_	_	
3-19	426-431	their	_	_	
3-20	432-440	database	_	_	
3-21	441-446	which	_	_	
3-22	447-452	state	_	_	
3-23	453-457	they	_	_	
3-24	458-461	are	_	_	
3-25	462-464	in	_	_	
3-26	464-465	:	_	_	
3-27	466-481	synchronization	_	_	
3-28	481-482	,	_	_	
3-29	483-492	integrity	_	_	
3-30	493-498	check	_	_	
3-31	498-499	,	_	_	
3-32	500-502	or	_	_	
3-33	503-518	reconfiguration	_	_	
3-34	519-524	event	_	_	
3-35	524-525	.	_	_	

#Text=An enhancement to the synchronization process is the addition of step 315 to provide protective devices with "advance notice" of their protective characteristics prior to a reconfiguration even such that initial restoration of the circuit may begin prior to adjustment of protective device profiles if the prior settings are adequate.
#Text=[0049] FIG. 4 is a flow diagram which illustrates the operation of the synchronization process state run by each node in accordance with the presently preferred embodiment.
4-1	526-528	An	_	_	
4-2	529-540	enhancement	_	_	
4-3	541-543	to	_	_	
4-4	544-547	the	_	_	
4-5	548-563	synchronization	_	_	
4-6	564-571	process	_	_	
4-7	572-574	is	_	_	
4-8	575-578	the	_	_	
4-9	579-587	addition	_	_	
4-10	588-590	of	_	_	
4-11	591-595	step	_	_	
4-12	596-599	315	_	_	
4-13	600-602	to	_	_	
4-14	603-610	provide	_	_	
4-15	611-621	protective	_	_	
4-16	622-629	devices	_	_	
4-17	630-634	with	_	_	
4-18	635-636	"	_	_	
4-19	636-643	advance	_	_	
4-20	644-650	notice	_	_	
4-21	650-651	"	_	_	
4-22	652-654	of	_	_	
4-23	655-660	their	_	_	
4-24	661-671	protective	_	_	
4-25	672-687	characteristics	_	_	
4-26	688-693	prior	_	_	
4-27	694-696	to	_	_	
4-28	697-698	a	_	_	
4-29	699-714	reconfiguration	_	_	
4-30	715-719	even	_	_	
4-31	720-724	such	_	_	
4-32	725-729	that	_	_	
4-33	730-737	initial	_	_	
4-34	738-749	restoration	_	_	
4-35	750-752	of	_	_	
4-36	753-756	the	_	_	
4-37	757-764	circuit	_	_	
4-38	765-768	may	_	_	
4-39	769-774	begin	_	_	
4-40	775-780	prior	_	_	
4-41	781-783	to	_	_	
4-42	784-794	adjustment	_	_	
4-43	795-797	of	_	_	
4-44	798-808	protective	_	_	
4-45	809-815	device	_	_	
4-46	816-824	profiles	_	_	
4-47	825-827	if	_	_	
4-48	828-831	the	_	_	
4-49	832-837	prior	_	_	
4-50	838-846	settings	_	_	
4-51	847-850	are	_	_	
4-52	851-859	adequate	_	_	
4-53	859-860	.	_	_	
4-54	861-862	[	_	_	
4-55	862-866	0049	_	_	
4-56	866-867	]	_	_	
4-57	868-871	FIG	_	_	
4-58	871-872	.	_	_	
4-59	873-874	4	_	_	
4-60	875-877	is	_	_	
4-61	878-879	a	_	_	
4-62	880-884	flow	_	_	
4-63	885-892	diagram	_	_	
4-64	893-898	which	_	_	
4-65	899-910	illustrates	_	_	
4-66	911-914	the	_	_	
4-67	915-924	operation	_	_	
4-68	925-927	of	_	_	
4-69	928-931	the	_	_	
4-70	932-947	synchronization	_	_	
4-71	948-955	process	_	_	
4-72	956-961	state	_	_	
4-73	962-965	run	_	_	
4-74	966-968	by	_	_	
4-75	969-973	each	_	_	
4-76	974-978	node	_	_	
4-77	979-981	in	_	_	
4-78	982-992	accordance	_	_	
4-79	993-997	with	_	_	
4-80	998-1001	the	_	_	
4-81	1002-1011	presently	_	_	
4-82	1012-1021	preferred	_	_	
4-83	1022-1032	embodiment	_	_	
4-84	1032-1033	.	_	_	

#Text=In this state the nodes construct a database of critical control information about the distribution system.
5-1	1034-1036	In	_	_	
5-2	1037-1041	this	_	_	
5-3	1042-1047	state	_	_	
5-4	1048-1051	the	_	_	
5-5	1052-1057	nodes	_	_	
5-6	1058-1067	construct	_	_	
5-7	1068-1069	a	_	_	
5-8	1070-1078	database	_	_	
5-9	1079-1081	of	_	_	
5-10	1082-1090	critical	_	_	
5-11	1091-1098	control	_	_	
5-12	1099-1110	information	_	_	
5-13	1111-1116	about	_	_	
5-14	1117-1120	the	_	_	
5-15	1121-1133	distribution	_	_	
5-16	1134-1140	system	_	_	
5-17	1140-1141	.	_	_	

#Text=All nodes contribute to the construction of a database.
6-1	1142-1145	All	_	_	
6-2	1146-1151	nodes	_	_	
6-3	1152-1162	contribute	_	_	
6-4	1163-1165	to	_	_	
6-5	1166-1169	the	_	_	
6-6	1170-1182	construction	_	_	
6-7	1183-1185	of	_	_	
6-8	1186-1187	a	_	_	
6-9	1188-1196	database	_	_	
6-10	1196-1197	.	_	_	

#Text=Each node stores in its memory a copy of the database.
7-1	1198-1202	Each	_	_	
7-2	1203-1207	node	_	_	
7-3	1208-1214	stores	_	_	
7-4	1215-1217	in	_	_	
7-5	1218-1221	its	_	_	
7-6	1222-1228	memory	_	_	
7-7	1229-1230	a	_	_	
7-8	1231-1235	copy	_	_	
7-9	1236-1238	of	_	_	
7-10	1239-1242	the	_	_	
7-11	1243-1251	database	_	_	
7-12	1251-1252	.	_	_	

#Text=The steps in constructing the database in accordance with the presently preferred embodiment are as follows: each node receives the database from the previous node, adds its own record of information and passes the database on to the next node.
8-1	1253-1256	The	*[3]	9-1[4_3]|10-2[5_3]	
8-2	1257-1262	steps	*[3]	_	
8-3	1263-1265	in	*[3]	_	
8-4	1266-1278	constructing	*[3]	_	
8-5	1279-1282	the	*[3]	_	
8-6	1283-1291	database	*[3]	_	
8-7	1292-1294	in	*[3]	_	
8-8	1295-1305	accordance	*[3]	_	
8-9	1306-1310	with	*[3]	_	
8-10	1311-1314	the	*[3]	_	
8-11	1315-1324	presently	*[3]	_	
8-12	1325-1334	preferred	*[3]	_	
8-13	1335-1345	embodiment	*[3]	_	
8-14	1346-1349	are	*[3]	_	
8-15	1350-1352	as	*[3]	_	
8-16	1353-1360	follows	*[3]	_	
8-17	1360-1361	:	*[3]	_	
8-18	1362-1366	each	*[3]	_	
8-19	1367-1371	node	*[3]	_	
8-20	1372-1380	receives	*[3]	_	
8-21	1381-1384	the	*[3]	_	
8-22	1385-1393	database	*[3]	_	
8-23	1394-1398	from	*[3]	_	
8-24	1399-1402	the	*[3]	_	
8-25	1403-1411	previous	*[3]	_	
8-26	1412-1416	node	*[3]	_	
8-27	1416-1417	,	*[3]	_	
8-28	1418-1422	adds	*[3]	_	
8-29	1423-1426	its	*[3]	_	
8-30	1427-1430	own	*[3]	_	
8-31	1431-1437	record	*[3]	_	
8-32	1438-1440	of	*[3]	_	
8-33	1441-1452	information	*[3]	_	
8-34	1453-1456	and	*[3]	_	
8-35	1457-1463	passes	*[3]	_	
8-36	1464-1467	the	*[3]	_	
8-37	1468-1476	database	*[3]	_	
8-38	1477-1479	on	*[3]	_	
8-39	1480-1482	to	*[3]	_	
8-40	1483-1486	the	*[3]	_	
8-41	1487-1491	next	*[3]	_	
8-42	1492-1496	node	*[3]	_	
8-43	1496-1497	.	*[3]	_	

#Text=This process continues until all nodes have received a record from every other node.
9-1	1498-1502	This	*[4]	_	
9-2	1503-1510	process	*[4]	_	
9-3	1511-1520	continues	_	_	
9-4	1521-1526	until	_	_	
9-5	1527-1530	all	_	_	
9-6	1531-1536	nodes	_	_	
9-7	1537-1541	have	_	_	
9-8	1542-1550	received	_	_	
9-9	1551-1552	a	_	_	
9-10	1553-1559	record	_	_	
9-11	1560-1564	from	_	_	
9-12	1565-1570	every	_	_	
9-13	1571-1576	other	_	_	
9-14	1577-1581	node	_	_	
9-15	1581-1582	.	_	_	

#Text=Once this process is compete, each node then proceeds to the integrity check state shown in FIG. 5
#Text=[0050] FIG. 5 is a flow diagram which illustrates the operation of the integrity check state process run by each node in accordance with the presently preferred embodiment.
10-1	1583-1587	Once	_	_	
10-2	1588-1592	this	*[5]	_	
10-3	1593-1600	process	*[5]	_	
10-4	1601-1603	is	_	_	
10-5	1604-1611	compete	_	_	
10-6	1611-1612	,	_	_	
10-7	1613-1617	each	_	_	
10-8	1618-1622	node	_	_	
10-9	1623-1627	then	_	_	
10-10	1628-1636	proceeds	_	_	
10-11	1637-1639	to	_	_	
10-12	1640-1643	the	_	_	
10-13	1644-1653	integrity	_	_	
10-14	1654-1659	check	_	_	
10-15	1660-1665	state	_	_	
10-16	1666-1671	shown	_	_	
10-17	1672-1674	in	_	_	
10-18	1675-1678	FIG	_	_	
10-19	1678-1679	.	_	_	
10-20	1680-1681	5	_	_	
10-21	1682-1683	[	_	_	
10-22	1683-1687	0050	_	_	
10-23	1687-1688	]	_	_	
10-24	1689-1692	FIG	_	_	
10-25	1692-1693	.	_	_	
10-26	1694-1695	5	_	_	
10-27	1696-1698	is	_	_	
10-28	1699-1700	a	_	_	
10-29	1701-1705	flow	_	_	
10-30	1706-1713	diagram	_	_	
10-31	1714-1719	which	_	_	
10-32	1720-1731	illustrates	_	_	
10-33	1732-1735	the	_	_	
10-34	1736-1745	operation	_	_	
10-35	1746-1748	of	_	_	
10-36	1749-1752	the	_	_	
10-37	1753-1762	integrity	_	_	
10-38	1763-1768	check	_	_	
10-39	1769-1774	state	_	_	
10-40	1775-1782	process	_	_	
10-41	1783-1786	run	_	_	
10-42	1787-1789	by	_	_	
10-43	1790-1794	each	_	_	
10-44	1795-1799	node	_	_	
10-45	1800-1802	in	_	_	
10-46	1803-1813	accordance	_	_	
10-47	1814-1818	with	_	_	
10-48	1819-1822	the	_	_	
10-49	1823-1832	presently	_	_	
10-50	1833-1842	preferred	_	_	
10-51	1843-1853	embodiment	_	_	
10-52	1853-1854	.	_	_	

#Text=When a node runs this process, it checks the records it has received from all the other nodes to ensure that the records reflect a timely version of the state of the system.
#Text=[0051] FIGS. 6 is a flow diagram which illustrates the operation of the transfer process state in accordance with the presently preferred embodiment.
11-1	1855-1859	When	_	_	
11-2	1860-1861	a	_	_	
11-3	1862-1866	node	_	_	
11-4	1867-1871	runs	_	_	
11-5	1872-1876	this	_	_	
11-6	1877-1884	process	_	_	
11-7	1884-1885	,	_	_	
11-8	1886-1888	it	_	_	
11-9	1889-1895	checks	_	_	
11-10	1896-1899	the	_	_	
11-11	1900-1907	records	_	_	
11-12	1908-1910	it	_	_	
11-13	1911-1914	has	_	_	
11-14	1915-1923	received	_	_	
11-15	1924-1928	from	_	_	
11-16	1929-1932	all	_	_	
11-17	1933-1936	the	_	_	
11-18	1937-1942	other	_	_	
11-19	1943-1948	nodes	_	_	
11-20	1949-1951	to	_	_	
11-21	1952-1958	ensure	_	_	
11-22	1959-1963	that	_	_	
11-23	1964-1967	the	_	_	
11-24	1968-1975	records	_	_	
11-25	1976-1983	reflect	_	_	
11-26	1984-1985	a	_	_	
11-27	1986-1992	timely	_	_	
11-28	1993-2000	version	_	_	
11-29	2001-2003	of	_	_	
11-30	2004-2007	the	_	_	
11-31	2008-2013	state	_	_	
11-32	2014-2016	of	_	_	
11-33	2017-2020	the	_	_	
11-34	2021-2027	system	_	_	
11-35	2027-2028	.	_	_	
11-36	2029-2030	[	_	_	
11-37	2030-2034	0051	_	_	
11-38	2034-2035	]	_	_	
11-39	2036-2040	FIGS	_	_	
11-40	2040-2041	.	_	_	
11-41	2042-2043	6	_	_	
11-42	2044-2046	is	_	_	
11-43	2047-2048	a	_	_	
11-44	2049-2053	flow	_	_	
11-45	2054-2061	diagram	_	_	
11-46	2062-2067	which	_	_	
11-47	2068-2079	illustrates	_	_	
11-48	2080-2083	the	_	_	
11-49	2084-2093	operation	_	_	
11-50	2094-2096	of	_	_	
11-51	2097-2100	the	_	_	
11-52	2101-2109	transfer	_	_	
11-53	2110-2117	process	_	_	
11-54	2118-2123	state	_	_	
11-55	2124-2126	in	_	_	
11-56	2127-2137	accordance	_	_	
11-57	2138-2142	with	_	_	
11-58	2143-2146	the	_	_	
11-59	2147-2156	presently	_	_	
11-60	2157-2166	preferred	_	_	
11-61	2167-2177	embodiment	_	_	
11-62	2177-2178	.	_	_	

#Text=This flow diagram describes the process used by each node upon the occurrence of a fault in the system followed by standalone sectionalization.
12-1	2179-2183	This	_	_	
12-2	2184-2188	flow	_	_	
12-3	2189-2196	diagram	_	_	
12-4	2197-2206	describes	_	_	
12-5	2207-2210	the	_	_	
12-6	2211-2218	process	_	_	
12-7	2219-2223	used	_	_	
12-8	2224-2226	by	_	_	
12-9	2227-2231	each	_	_	
12-10	2232-2236	node	_	_	
12-11	2237-2241	upon	_	_	
12-12	2242-2245	the	_	_	
12-13	2246-2256	occurrence	_	_	
12-14	2257-2259	of	_	_	
12-15	2260-2261	a	_	_	
12-16	2262-2267	fault	_	_	
12-17	2268-2270	in	_	_	
12-18	2271-2274	the	_	_	
12-19	2275-2281	system	_	_	
12-20	2282-2290	followed	_	_	
12-21	2291-2293	by	_	_	
12-22	2294-2304	standalone	_	_	
12-23	2305-2321	sectionalization	_	_	
12-24	2321-2322	.	_	_	

#Text=This process is also started in a node when the node receives a message that another node has entered this process.
13-1	2323-2327	This	_	_	
13-2	2328-2335	process	_	_	
13-3	2336-2338	is	_	_	
13-4	2339-2343	also	_	_	
13-5	2344-2351	started	_	_	
13-6	2352-2354	in	_	_	
13-7	2355-2356	a	_	_	
13-8	2357-2361	node	_	_	
13-9	2362-2366	when	_	_	
13-10	2367-2370	the	_	_	
13-11	2371-2375	node	_	_	
13-12	2376-2384	receives	_	_	
13-13	2385-2386	a	_	_	
13-14	2387-2394	message	_	_	
13-15	2395-2399	that	_	_	
13-16	2400-2407	another	_	_	
13-17	2408-2412	node	_	_	
13-18	2413-2416	has	_	_	
13-19	2417-2424	entered	_	_	
13-20	2425-2429	this	_	_	
13-21	2430-2437	process	_	_	
13-22	2437-2438	.	_	_	

#Text=In order to restore electric power service to as many users as possible after a fault has occurred, each node will use this process to determine if it can close its associated switch(es).
14-1	2439-2441	In	_	_	
14-2	2442-2447	order	_	_	
14-3	2448-2450	to	_	_	
14-4	2451-2458	restore	_	_	
14-5	2459-2467	electric	_	_	
14-6	2468-2473	power	_	_	
14-7	2474-2481	service	_	_	
14-8	2482-2484	to	_	_	
14-9	2485-2487	as	_	_	
14-10	2488-2492	many	_	_	
14-11	2493-2498	users	_	_	
14-12	2499-2501	as	_	_	
14-13	2502-2510	possible	_	_	
14-14	2511-2516	after	_	_	
14-15	2517-2518	a	_	_	
14-16	2519-2524	fault	_	_	
14-17	2525-2528	has	_	_	
14-18	2529-2537	occurred	_	_	
14-19	2537-2538	,	_	_	
14-20	2539-2543	each	_	_	
14-21	2544-2548	node	_	_	
14-22	2549-2553	will	_	_	
14-23	2554-2557	use	_	_	
14-24	2558-2562	this	_	_	
14-25	2563-2570	process	_	_	
14-26	2571-2573	to	_	_	
14-27	2574-2583	determine	_	_	
14-28	2584-2586	if	_	_	
14-29	2587-2589	it	_	_	
14-30	2590-2593	can	_	_	
14-31	2594-2599	close	_	_	
14-32	2600-2603	its	_	_	
14-33	2604-2614	associated	_	_	
14-34	2615-2621	switch	_	_	
14-35	2621-2622	(	_	_	
14-36	2622-2624	es	_	_	
14-37	2624-2625	)	_	_	
14-38	2625-2626	.	_	_	

#Text=The present invention extends the functionality of the transfer logic to insure that the protection settings match the requirements of the transfer (steps 645-654).
#Text=[0052] FIG. 7 describes the logic used by each node to return the distribution system to its normal state once the fault has been cleared.
15-1	2627-2630	The	_	_	
15-2	2631-2638	present	_	_	
15-3	2639-2648	invention	_	_	
15-4	2649-2656	extends	_	_	
15-5	2657-2660	the	_	_	
15-6	2661-2674	functionality	_	_	
15-7	2675-2677	of	_	_	
15-8	2678-2681	the	_	_	
15-9	2682-2690	transfer	_	_	
15-10	2691-2696	logic	_	_	
15-11	2697-2699	to	_	_	
15-12	2700-2706	insure	_	_	
15-13	2707-2711	that	_	_	
15-14	2712-2715	the	_	_	
15-15	2716-2726	protection	_	_	
15-16	2727-2735	settings	_	_	
15-17	2736-2741	match	_	_	
15-18	2742-2745	the	_	_	
15-19	2746-2758	requirements	_	_	
15-20	2759-2761	of	_	_	
15-21	2762-2765	the	_	_	
15-22	2766-2774	transfer	_	_	
15-23	2775-2776	(	_	_	
15-24	2776-2781	steps	_	_	
15-25	2782-2785	645	_	_	
15-26	2785-2786	-	_	_	
15-27	2786-2789	654	_	_	
15-28	2789-2790	)	_	_	
15-29	2790-2791	.	_	_	
15-30	2792-2793	[	_	_	
15-31	2793-2797	0052	_	_	
15-32	2797-2798	]	_	_	
15-33	2799-2802	FIG	_	_	
15-34	2802-2803	.	_	_	
15-35	2804-2805	7	_	_	
15-36	2806-2815	describes	_	_	
15-37	2816-2819	the	_	_	
15-38	2820-2825	logic	_	_	
15-39	2826-2830	used	_	_	
15-40	2831-2833	by	_	_	
15-41	2834-2838	each	_	_	
15-42	2839-2843	node	_	_	
15-43	2844-2846	to	_	_	
15-44	2847-2853	return	_	_	
15-45	2854-2857	the	_	_	
15-46	2858-2870	distribution	_	_	
15-47	2871-2877	system	_	_	
15-48	2878-2880	to	_	_	
15-49	2881-2884	its	_	_	
15-50	2885-2891	normal	_	_	
15-51	2892-2897	state	_	_	
15-52	2898-2902	once	_	_	
15-53	2903-2906	the	_	_	
15-54	2907-2912	fault	_	_	
15-55	2913-2916	has	_	_	
15-56	2917-2921	been	_	_	
15-57	2922-2929	cleared	_	_	
15-58	2929-2930	.	_	_	

#Text=The present invention extends the functionality of the return-to-normal logic to insure that the protection settings match the requirements of the return-to-normal transition, particularly when the "closed" transition is used (steps 722 and 750-752).
16-1	2931-2934	The	_	_	
16-2	2935-2942	present	_	_	
16-3	2943-2952	invention	_	_	
16-4	2953-2960	extends	_	_	
16-5	2961-2964	the	_	_	
16-6	2965-2978	functionality	_	_	
16-7	2979-2981	of	_	_	
16-8	2982-2985	the	_	_	
16-9	2986-3002	return-to-normal	_	_	
16-10	3003-3008	logic	_	_	
16-11	3009-3011	to	_	_	
16-12	3012-3018	insure	_	_	
16-13	3019-3023	that	_	_	
16-14	3024-3027	the	_	_	
16-15	3028-3038	protection	_	_	
16-16	3039-3047	settings	_	_	
16-17	3048-3053	match	_	_	
16-18	3054-3057	the	_	_	
16-19	3058-3070	requirements	_	_	
16-20	3071-3073	of	_	_	
16-21	3074-3077	the	_	_	
16-22	3078-3094	return-to-normal	_	_	
16-23	3095-3105	transition	_	_	
16-24	3105-3106	,	_	_	
16-25	3107-3119	particularly	_	_	
16-26	3120-3124	when	_	_	
16-27	3125-3128	the	_	_	
16-28	3129-3130	"	_	_	
16-29	3130-3136	closed	_	_	
16-30	3136-3137	"	_	_	
16-31	3138-3148	transition	_	_	
16-32	3149-3151	is	_	_	
16-33	3152-3156	used	_	_	
16-34	3157-3158	(	_	_	
16-35	3158-3163	steps	_	_	
16-36	3164-3167	722	_	_	
16-37	3168-3171	and	_	_	
16-38	3172-3175	750	_	_	
16-39	3175-3176	-	_	_	
16-40	3176-3179	752	_	_	
16-41	3179-3180	)	_	_	
16-42	3180-3181	.	_	_	
