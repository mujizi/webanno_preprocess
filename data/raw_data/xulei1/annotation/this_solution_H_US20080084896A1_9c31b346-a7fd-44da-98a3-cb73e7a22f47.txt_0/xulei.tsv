#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Diy_coref|
#T_RL=webanno.custom.Diy_coref_re|BT_webanno.custom.Diy_coref


#Text=[0058] Refinements can be integrated with this algorithm.
1-1	0-1	[	_	_	
1-2	1-5	0058	_	_	
1-3	5-6	]	_	_	
1-4	7-18	Refinements	_	_	
1-5	19-22	can	_	_	
1-6	23-25	be	_	_	
1-7	26-36	integrated	_	_	
1-8	37-41	with	_	_	
1-9	42-46	this	_	_	
1-10	47-56	algorithm	_	_	
1-11	56-57	.	_	_	

#Text=In particular, even if an instantaneous insertion is possible, provision may be made to check whether there exist delay values for which the insertion is also possible, and to choose an insertion with that of the determined delays which makes it possible to satisfy a stronger constraint in terms of network capacity threshold, typically for which the aggregate throughput would at all points of the insertion window be less than or equal to a threshold Br2 that is less than Br1, for example of the order of 5%.
2-1	58-60	In	_	_	
2-2	61-71	particular	_	_	
2-3	71-72	,	_	_	
2-4	73-77	even	_	_	
2-5	78-80	if	_	_	
2-6	81-83	an	_	_	
2-7	84-97	instantaneous	_	_	
2-8	98-107	insertion	_	_	
2-9	108-110	is	_	_	
2-10	111-119	possible	_	_	
2-11	119-120	,	_	_	
2-12	121-130	provision	_	_	
2-13	131-134	may	_	_	
2-14	135-137	be	_	_	
2-15	138-142	made	_	_	
2-16	143-145	to	_	_	
2-17	146-151	check	_	_	
2-18	152-159	whether	_	_	
2-19	160-165	there	_	_	
2-20	166-171	exist	_	_	
2-21	172-177	delay	_	_	
2-22	178-184	values	_	_	
2-23	185-188	for	_	_	
2-24	189-194	which	_	_	
2-25	195-198	the	_	_	
2-26	199-208	insertion	_	_	
2-27	209-211	is	_	_	
2-28	212-216	also	_	_	
2-29	217-225	possible	_	_	
2-30	225-226	,	_	_	
2-31	227-230	and	_	_	
2-32	231-233	to	_	_	
2-33	234-240	choose	_	_	
2-34	241-243	an	_	_	
2-35	244-253	insertion	_	_	
2-36	254-258	with	_	_	
2-37	259-263	that	_	_	
2-38	264-266	of	_	_	
2-39	267-270	the	_	_	
2-40	271-281	determined	_	_	
2-41	282-288	delays	_	_	
2-42	289-294	which	_	_	
2-43	295-300	makes	_	_	
2-44	301-303	it	_	_	
2-45	304-312	possible	_	_	
2-46	313-315	to	_	_	
2-47	316-323	satisfy	_	_	
2-48	324-325	a	_	_	
2-49	326-334	stronger	_	_	
2-50	335-345	constraint	_	_	
2-51	346-348	in	_	_	
2-52	349-354	terms	_	_	
2-53	355-357	of	_	_	
2-54	358-365	network	_	_	
2-55	366-374	capacity	_	_	
2-56	375-384	threshold	_	_	
2-57	384-385	,	_	_	
2-58	386-395	typically	_	_	
2-59	396-399	for	_	_	
2-60	400-405	which	_	_	
2-61	406-409	the	_	_	
2-62	410-419	aggregate	_	_	
2-63	420-430	throughput	_	_	
2-64	431-436	would	_	_	
2-65	437-439	at	_	_	
2-66	440-443	all	_	_	
2-67	444-450	points	_	_	
2-68	451-453	of	_	_	
2-69	454-457	the	_	_	
2-70	458-467	insertion	_	_	
2-71	468-474	window	_	_	
2-72	475-477	be	_	_	
2-73	478-482	less	_	_	
2-74	483-487	than	_	_	
2-75	488-490	or	_	_	
2-76	491-496	equal	_	_	
2-77	497-499	to	_	_	
2-78	500-501	a	_	_	
2-79	502-511	threshold	_	_	
2-80	512-515	Br2	_	_	
2-81	516-520	that	_	_	
2-82	521-523	is	_	_	
2-83	524-528	less	_	_	
2-84	529-533	than	_	_	
2-85	534-537	Br1	_	_	
2-86	537-538	,	_	_	
2-87	539-542	for	_	_	
2-88	543-550	example	_	_	
2-89	551-553	of	_	_	
2-90	554-557	the	_	_	
2-91	558-563	order	_	_	
2-92	564-566	of	_	_	
2-93	567-569	5%	_	_	
2-94	569-570	.	_	_	

#Text=In this case, and as for example illustrated in FIG. 7, the controller initializes (step 100) a loop 200 for determining an instant of insertion: counter i=0, delay .DELTA.ti=0, obtain the profiles S(t) (step 100.1) and Rn(t) (step 100.2); and performs this loop K times, by incrementing the counter i by one unit (i=i+1) and the delay by one loop stepsize m (.DELTA.ti=.DELTA.ti+m) between each loop (step 300).
#Text=[0059] At each loop 200, the controller applies various steps: [0060] step 200.1: determination of whether for the delay considered .DELTA.ti, the threshold condition Br1 is satisfied, if appropriate with smoothing (step 200.2). [0061] step 200.3: if the condition in step 200.1 is satisfied, determination of whether the more constrained threshold condition Br2 is satisfied; to finish (step 200.4) depending on the results of the loop i, a table of possible solutions Si, indicating the value of the delay .DELTA.ti (zero, or positive) on insertion and the associated threshold constraint: Br1, or Br2 which is satisfied.
#Text=[0062] For example, the following three solutions are obtained: S0(.DELTA.t0=0; Br1) at i=0; S2(.DELTA.t2=2.m; Br2) at i=2; S5(.DELTA.t5=5.m; Br2) at i=5.
3-1	571-573	In	_	_	
3-2	574-578	this	_	_	
3-3	579-583	case	_	_	
3-4	583-584	,	_	_	
3-5	585-588	and	_	_	
3-6	589-591	as	_	_	
3-7	592-595	for	_	_	
3-8	596-603	example	_	_	
3-9	604-615	illustrated	_	_	
3-10	616-618	in	_	_	
3-11	619-622	FIG	_	_	
3-12	622-623	.	_	_	
3-13	624-625	7	_	_	
3-14	625-626	,	_	_	
3-15	627-630	the	_	_	
3-16	631-641	controller	_	_	
3-17	642-653	initializes	_	_	
3-18	654-655	(	_	_	
3-19	655-659	step	_	_	
3-20	660-663	100	_	_	
3-21	663-664	)	_	_	
3-22	665-666	a	_	_	
3-23	667-671	loop	_	_	
3-24	672-675	200	_	_	
3-25	676-679	for	_	_	
3-26	680-691	determining	_	_	
3-27	692-694	an	_	_	
3-28	695-702	instant	_	_	
3-29	703-705	of	_	_	
3-30	706-715	insertion	_	_	
3-31	715-716	:	_	_	
3-32	717-724	counter	_	_	
3-33	725-726	i	_	_	
3-34	726-727	=	_	_	
3-35	727-728	0	_	_	
3-36	728-729	,	_	_	
3-37	730-735	delay	_	_	
3-38	736-737	.	_	_	
3-39	737-745	DELTA.ti	_	_	
3-40	745-746	=	_	_	
3-41	746-747	0	_	_	
3-42	747-748	,	_	_	
3-43	749-755	obtain	_	_	
3-44	756-759	the	_	_	
3-45	760-768	profiles	_	_	
3-46	769-770	S	_	_	
3-47	770-771	(	_	_	
3-48	771-772	t	_	_	
3-49	772-773	)	_	_	
3-50	774-775	(	_	_	
3-51	775-779	step	_	_	
3-52	780-785	100.1	_	_	
3-53	785-786	)	_	_	
3-54	787-790	and	_	_	
3-55	791-793	Rn	_	_	
3-56	793-794	(	_	_	
3-57	794-795	t	_	_	
3-58	795-796	)	_	_	
3-59	797-798	(	_	_	
3-60	798-802	step	_	_	
3-61	803-808	100.2	_	_	
3-62	808-809	)	_	_	
3-63	809-810	;	_	_	
3-64	811-814	and	_	_	
3-65	815-823	performs	_	_	
3-66	824-828	this	_	_	
3-67	829-833	loop	_	_	
3-68	834-835	K	_	_	
3-69	836-841	times	_	_	
3-70	841-842	,	_	_	
3-71	843-845	by	_	_	
3-72	846-858	incrementing	_	_	
3-73	859-862	the	_	_	
3-74	863-870	counter	_	_	
3-75	871-872	i	_	_	
3-76	873-875	by	_	_	
3-77	876-879	one	_	_	
3-78	880-884	unit	_	_	
3-79	885-886	(	_	_	
3-80	886-887	i	_	_	
3-81	887-888	=	_	_	
3-82	888-889	i	_	_	
3-83	889-890	+	_	_	
3-84	890-891	1	_	_	
3-85	891-892	)	_	_	
3-86	893-896	and	_	_	
3-87	897-900	the	_	_	
3-88	901-906	delay	_	_	
3-89	907-909	by	_	_	
3-90	910-913	one	_	_	
3-91	914-918	loop	_	_	
3-92	919-927	stepsize	_	_	
3-93	928-929	m	_	_	
3-94	930-931	(	_	_	
3-95	931-932	.	_	_	
3-96	932-940	DELTA.ti	_	_	
3-97	940-941	=	_	_	
3-98	941-942	.	_	_	
3-99	942-950	DELTA.ti	_	_	
3-100	950-951	+	_	_	
3-101	951-952	m	_	_	
3-102	952-953	)	_	_	
3-103	954-961	between	_	_	
3-104	962-966	each	_	_	
3-105	967-971	loop	_	_	
3-106	972-973	(	_	_	
3-107	973-977	step	_	_	
3-108	978-981	300	_	_	
3-109	981-982	)	_	_	
3-110	982-983	.	_	_	
3-111	984-985	[	_	_	
3-112	985-989	0059	_	_	
3-113	989-990	]	_	_	
3-114	991-993	At	_	_	
3-115	994-998	each	_	_	
3-116	999-1003	loop	_	_	
3-117	1004-1007	200	_	_	
3-118	1007-1008	,	_	_	
3-119	1009-1012	the	_	_	
3-120	1013-1023	controller	_	_	
3-121	1024-1031	applies	_	_	
3-122	1032-1039	various	_	_	
3-123	1040-1045	steps	_	_	
3-124	1045-1046	:	_	_	
3-125	1047-1048	[	_	_	
3-126	1048-1052	0060	_	_	
3-127	1052-1053	]	_	_	
3-128	1054-1058	step	_	_	
3-129	1059-1064	200.1	_	_	
3-130	1064-1065	:	_	_	
3-131	1066-1079	determination	_	_	
3-132	1080-1082	of	_	_	
3-133	1083-1090	whether	_	_	
3-134	1091-1094	for	_	_	
3-135	1095-1098	the	_	_	
3-136	1099-1104	delay	_	_	
3-137	1105-1115	considered	_	_	
3-138	1116-1117	.	_	_	
3-139	1117-1125	DELTA.ti	_	_	
3-140	1125-1126	,	_	_	
3-141	1127-1130	the	_	_	
3-142	1131-1140	threshold	_	_	
3-143	1141-1150	condition	_	_	
3-144	1151-1154	Br1	_	_	
3-145	1155-1157	is	_	_	
3-146	1158-1167	satisfied	_	_	
3-147	1167-1168	,	_	_	
3-148	1169-1171	if	_	_	
3-149	1172-1183	appropriate	_	_	
3-150	1184-1188	with	_	_	
3-151	1189-1198	smoothing	_	_	
3-152	1199-1200	(	_	_	
3-153	1200-1204	step	_	_	
3-154	1205-1210	200.2	_	_	
3-155	1210-1211	)	_	_	
3-156	1211-1212	.	_	_	
3-157	1213-1214	[	_	_	
3-158	1214-1218	0061	_	_	
3-159	1218-1219	]	_	_	
3-160	1220-1224	step	_	_	
3-161	1225-1230	200.3	_	_	
3-162	1230-1231	:	_	_	
3-163	1232-1234	if	_	_	
3-164	1235-1238	the	_	_	
3-165	1239-1248	condition	_	_	
3-166	1249-1251	in	_	_	
3-167	1252-1256	step	_	_	
3-168	1257-1262	200.1	_	_	
3-169	1263-1265	is	_	_	
3-170	1266-1275	satisfied	_	_	
3-171	1275-1276	,	_	_	
3-172	1277-1290	determination	_	_	
3-173	1291-1293	of	_	_	
3-174	1294-1301	whether	_	_	
3-175	1302-1305	the	_	_	
3-176	1306-1310	more	_	_	
3-177	1311-1322	constrained	_	_	
3-178	1323-1332	threshold	_	_	
3-179	1333-1342	condition	_	_	
3-180	1343-1346	Br2	_	_	
3-181	1347-1349	is	_	_	
3-182	1350-1359	satisfied	_	_	
3-183	1359-1360	;	_	_	
3-184	1361-1363	to	_	_	
3-185	1364-1370	finish	_	_	
3-186	1371-1372	(	_	_	
3-187	1372-1376	step	_	_	
3-188	1377-1382	200.4	_	_	
3-189	1382-1383	)	_	_	
3-190	1384-1393	depending	_	_	
3-191	1394-1396	on	_	_	
3-192	1397-1400	the	_	_	
3-193	1401-1408	results	_	_	
3-194	1409-1411	of	_	_	
3-195	1412-1415	the	_	_	
3-196	1416-1420	loop	_	_	
3-197	1421-1422	i	_	_	
3-198	1422-1423	,	_	_	
3-199	1424-1425	a	_	_	
3-200	1426-1431	table	_	_	
3-201	1432-1434	of	_	_	
3-202	1435-1443	possible	_	_	
3-203	1444-1453	solutions	_	_	
3-204	1454-1456	Si	_	_	
3-205	1456-1457	,	_	_	
3-206	1458-1468	indicating	_	_	
3-207	1469-1472	the	_	_	
3-208	1473-1478	value	_	_	
3-209	1479-1481	of	_	_	
3-210	1482-1485	the	_	_	
3-211	1486-1491	delay	_	_	
3-212	1492-1493	.	_	_	
3-213	1493-1501	DELTA.ti	_	_	
3-214	1502-1503	(	_	_	
3-215	1503-1507	zero	_	_	
3-216	1507-1508	,	_	_	
3-217	1509-1511	or	_	_	
3-218	1512-1520	positive	_	_	
3-219	1520-1521	)	_	_	
3-220	1522-1524	on	_	_	
3-221	1525-1534	insertion	_	_	
3-222	1535-1538	and	_	_	
3-223	1539-1542	the	_	_	
3-224	1543-1553	associated	_	_	
3-225	1554-1563	threshold	_	_	
3-226	1564-1574	constraint	_	_	
3-227	1574-1575	:	_	_	
3-228	1576-1579	Br1	_	_	
3-229	1579-1580	,	_	_	
3-230	1581-1583	or	_	_	
3-231	1584-1587	Br2	_	_	
3-232	1588-1593	which	_	_	
3-233	1594-1596	is	_	_	
3-234	1597-1606	satisfied	_	_	
3-235	1606-1607	.	_	_	
3-236	1608-1609	[	*[1]	4-27[2_1]	
3-237	1609-1613	0062	*[1]	_	
3-238	1613-1614	]	*[1]	_	
3-239	1615-1618	For	*[1]	_	
3-240	1619-1626	example	*[1]	_	
3-241	1626-1627	,	*[1]	_	
3-242	1628-1631	the	*[1]	_	
3-243	1632-1641	following	*[1]	_	
3-244	1642-1647	three	*[1]	_	
3-245	1648-1657	solutions	*[1]	_	
3-246	1658-1661	are	*[1]	_	
3-247	1662-1670	obtained	*[1]	_	
3-248	1670-1671	:	*[1]	_	
3-249	1672-1674	S0	*[1]	_	
3-250	1674-1675	(	*[1]	_	
3-251	1675-1676	.	*[1]	_	
3-252	1676-1684	DELTA.t0	*[1]	_	
3-253	1684-1685	=	*[1]	_	
3-254	1685-1686	0	*[1]	_	
3-255	1686-1687	;	*[1]	_	
3-256	1688-1691	Br1	*[1]	_	
3-257	1691-1692	)	*[1]	_	
3-258	1693-1695	at	*[1]	_	
3-259	1696-1697	i	*[1]	_	
3-260	1697-1698	=	*[1]	_	
3-261	1698-1699	0	*[1]	_	
3-262	1699-1700	;	*[1]	_	
3-263	1701-1703	S2	*[1]	_	
3-264	1703-1704	(	*[1]	_	
3-265	1704-1705	.	*[1]	_	
3-266	1705-1713	DELTA.t2	*[1]	_	
3-267	1713-1714	=	*[1]	_	
3-268	1714-1715	2	*[1]	_	
3-269	1715-1716	.	*[1]	_	
3-270	1716-1717	m	*[1]	_	
3-271	1717-1718	;	*[1]	_	
3-272	1719-1722	Br2	*[1]	_	
3-273	1722-1723	)	*[1]	_	
3-274	1724-1726	at	*[1]	_	
3-275	1727-1728	i	*[1]	_	
3-276	1728-1729	=	*[1]	_	
3-277	1729-1730	2	*[1]	_	
3-278	1730-1731	;	*[1]	_	
3-279	1732-1734	S5	*[1]	_	
3-280	1734-1735	(	*[1]	_	
3-281	1735-1736	.	*[1]	_	
3-282	1736-1744	DELTA.t5	*[1]	_	
3-283	1744-1745	=	*[1]	_	
3-284	1745-1746	5	*[1]	_	
3-285	1746-1747	.	*[1]	_	
3-286	1747-1748	m	*[1]	_	
3-287	1748-1749	;	*[1]	_	
3-288	1750-1753	Br2	*[1]	_	
3-289	1753-1754	)	*[1]	_	
3-290	1755-1757	at	*[1]	_	
3-291	1758-1759	i	*[1]	_	
3-292	1759-1760	=	*[1]	_	
3-293	1760-1761	5	*[1]	_	
3-294	1761-1762	.	*[1]	_	

#Text=The controller 7 will then be able to prefer the solution S2, to the solutions S0 and S5: in the corresponding insertion window, this solution leaves more bandwidth available than the solution S0, and this may facilitate the allowance of another future request; and it imposes a lesser delay on the insertion than the request S5.
#Text=[0063] In a practical example the value m of the loop stepsize can be of the order of 50 milliseconds and the maximum allowable delay for a user, without appreciable service degradation, of the order of 500 milliseconds to 1 second, thereby giving a maximum number K of loops of the order of 10 to 20.
#Text=[0064] Embodiments of the verification step that are efficacious in terms of calculation time and memory consumption can be implemented, in particular for processing the throughput profiles and comparing them with the threshold.
4-1	1763-1766	The	_	_	
4-2	1767-1777	controller	_	_	
4-3	1778-1779	7	_	_	
4-4	1780-1784	will	_	_	
4-5	1785-1789	then	_	_	
4-6	1790-1792	be	_	_	
4-7	1793-1797	able	_	_	
4-8	1798-1800	to	_	_	
4-9	1801-1807	prefer	_	_	
4-10	1808-1811	the	_	_	
4-11	1812-1820	solution	_	_	
4-12	1821-1823	S2	_	_	
4-13	1823-1824	,	_	_	
4-14	1825-1827	to	_	_	
4-15	1828-1831	the	_	_	
4-16	1832-1841	solutions	_	_	
4-17	1842-1844	S0	_	_	
4-18	1845-1848	and	_	_	
4-19	1849-1851	S5	_	_	
4-20	1851-1852	:	_	_	
4-21	1853-1855	in	_	_	
4-22	1856-1859	the	_	_	
4-23	1860-1873	corresponding	_	_	
4-24	1874-1883	insertion	_	_	
4-25	1884-1890	window	_	_	
4-26	1890-1891	,	_	_	
4-27	1892-1896	this	*[2]	_	
4-28	1897-1905	solution	*[2]	_	
4-29	1906-1912	leaves	_	_	
4-30	1913-1917	more	_	_	
4-31	1918-1927	bandwidth	_	_	
4-32	1928-1937	available	_	_	
4-33	1938-1942	than	_	_	
4-34	1943-1946	the	_	_	
4-35	1947-1955	solution	_	_	
4-36	1956-1958	S0	_	_	
4-37	1958-1959	,	_	_	
4-38	1960-1963	and	_	_	
4-39	1964-1968	this	_	_	
4-40	1969-1972	may	_	_	
4-41	1973-1983	facilitate	_	_	
4-42	1984-1987	the	_	_	
4-43	1988-1997	allowance	_	_	
4-44	1998-2000	of	_	_	
4-45	2001-2008	another	_	_	
4-46	2009-2015	future	_	_	
4-47	2016-2023	request	_	_	
4-48	2023-2024	;	_	_	
4-49	2025-2028	and	_	_	
4-50	2029-2031	it	_	_	
4-51	2032-2039	imposes	_	_	
4-52	2040-2041	a	_	_	
4-53	2042-2048	lesser	_	_	
4-54	2049-2054	delay	_	_	
4-55	2055-2057	on	_	_	
4-56	2058-2061	the	_	_	
4-57	2062-2071	insertion	_	_	
4-58	2072-2076	than	_	_	
4-59	2077-2080	the	_	_	
4-60	2081-2088	request	_	_	
4-61	2089-2091	S5	_	_	
4-62	2091-2092	.	_	_	
4-63	2093-2094	[	_	_	
4-64	2094-2098	0063	_	_	
4-65	2098-2099	]	_	_	
4-66	2100-2102	In	_	_	
4-67	2103-2104	a	_	_	
4-68	2105-2114	practical	_	_	
4-69	2115-2122	example	_	_	
4-70	2123-2126	the	_	_	
4-71	2127-2132	value	_	_	
4-72	2133-2134	m	_	_	
4-73	2135-2137	of	_	_	
4-74	2138-2141	the	_	_	
4-75	2142-2146	loop	_	_	
4-76	2147-2155	stepsize	_	_	
4-77	2156-2159	can	_	_	
4-78	2160-2162	be	_	_	
4-79	2163-2165	of	_	_	
4-80	2166-2169	the	_	_	
4-81	2170-2175	order	_	_	
4-82	2176-2178	of	_	_	
4-83	2179-2181	50	_	_	
4-84	2182-2194	milliseconds	_	_	
4-85	2195-2198	and	_	_	
4-86	2199-2202	the	_	_	
4-87	2203-2210	maximum	_	_	
4-88	2211-2220	allowable	_	_	
4-89	2221-2226	delay	_	_	
4-90	2227-2230	for	_	_	
4-91	2231-2232	a	_	_	
4-92	2233-2237	user	_	_	
4-93	2237-2238	,	_	_	
4-94	2239-2246	without	_	_	
4-95	2247-2258	appreciable	_	_	
4-96	2259-2266	service	_	_	
4-97	2267-2278	degradation	_	_	
4-98	2278-2279	,	_	_	
4-99	2280-2282	of	_	_	
4-100	2283-2286	the	_	_	
4-101	2287-2292	order	_	_	
4-102	2293-2295	of	_	_	
4-103	2296-2299	500	_	_	
4-104	2300-2312	milliseconds	_	_	
4-105	2313-2315	to	_	_	
4-106	2316-2317	1	_	_	
4-107	2318-2324	second	_	_	
4-108	2324-2325	,	_	_	
4-109	2326-2333	thereby	_	_	
4-110	2334-2340	giving	_	_	
4-111	2341-2342	a	_	_	
4-112	2343-2350	maximum	_	_	
4-113	2351-2357	number	_	_	
4-114	2358-2359	K	_	_	
4-115	2360-2362	of	_	_	
4-116	2363-2368	loops	_	_	
4-117	2369-2371	of	_	_	
4-118	2372-2375	the	_	_	
4-119	2376-2381	order	_	_	
4-120	2382-2384	of	_	_	
4-121	2385-2387	10	_	_	
4-122	2388-2390	to	_	_	
4-123	2391-2393	20	_	_	
4-124	2393-2394	.	_	_	
4-125	2395-2396	[	_	_	
4-126	2396-2400	0064	_	_	
4-127	2400-2401	]	_	_	
4-128	2402-2413	Embodiments	_	_	
4-129	2414-2416	of	_	_	
4-130	2417-2420	the	_	_	
4-131	2421-2433	verification	_	_	
4-132	2434-2438	step	_	_	
4-133	2439-2443	that	_	_	
4-134	2444-2447	are	_	_	
4-135	2448-2459	efficacious	_	_	
4-136	2460-2462	in	_	_	
4-137	2463-2468	terms	_	_	
4-138	2469-2471	of	_	_	
4-139	2472-2483	calculation	_	_	
4-140	2484-2488	time	_	_	
4-141	2489-2492	and	_	_	
4-142	2493-2499	memory	_	_	
4-143	2500-2511	consumption	_	_	
4-144	2512-2515	can	_	_	
4-145	2516-2518	be	_	_	
4-146	2519-2530	implemented	_	_	
4-147	2530-2531	,	_	_	
4-148	2532-2534	in	_	_	
4-149	2535-2545	particular	_	_	
4-150	2546-2549	for	_	_	
4-151	2550-2560	processing	_	_	
4-152	2561-2564	the	_	_	
4-153	2565-2575	throughput	_	_	
4-154	2576-2584	profiles	_	_	
4-155	2585-2588	and	_	_	
4-156	2589-2598	comparing	_	_	
4-157	2599-2603	them	_	_	
4-158	2604-2608	with	_	_	
4-159	2609-2612	the	_	_	
4-160	2613-2622	threshold	_	_	
4-161	2622-2623	.	_	_	

#Text=It is useful at this juncture to specify a few concepts regarding the throughput profiles.
5-1	2624-2626	It	_	_	
5-2	2627-2629	is	_	_	
5-3	2630-2636	useful	_	_	
5-4	2637-2639	at	_	_	
5-5	2640-2644	this	_	_	
5-6	2645-2653	juncture	_	_	
5-7	2654-2656	to	_	_	
5-8	2657-2664	specify	_	_	
5-9	2665-2666	a	_	_	
5-10	2667-2670	few	_	_	
5-11	2671-2679	concepts	_	_	
5-12	2680-2689	regarding	_	_	
5-13	2690-2693	the	_	_	
5-14	2694-2704	throughput	_	_	
5-15	2705-2713	profiles	_	_	
5-16	2713-2714	.	_	_	

#Text=The throughput profile of a stream gives the evolution as a function of time of the data throughput of this stream.
6-1	2715-2718	The	_	_	
6-2	2719-2729	throughput	_	_	
6-3	2730-2737	profile	_	_	
6-4	2738-2740	of	_	_	
6-5	2741-2742	a	_	_	
6-6	2743-2749	stream	_	_	
6-7	2750-2755	gives	_	_	
6-8	2756-2759	the	_	_	
6-9	2760-2769	evolution	_	_	
6-10	2770-2772	as	_	_	
6-11	2773-2774	a	_	_	
6-12	2775-2783	function	_	_	
6-13	2784-2786	of	_	_	
6-14	2787-2791	time	_	_	
6-15	2792-2794	of	_	_	
6-16	2795-2798	the	_	_	
6-17	2799-2803	data	_	_	
6-18	2804-2814	throughput	_	_	
6-19	2815-2817	of	_	_	
6-20	2818-2822	this	_	_	
6-21	2823-2829	stream	_	_	
6-22	2829-2830	.	_	_	

#Text=The width of the profile corresponds to a duration of transmission of this stream.
7-1	2831-2834	The	_	_	
7-2	2835-2840	width	_	_	
7-3	2841-2843	of	_	_	
7-4	2844-2847	the	_	_	
7-5	2848-2855	profile	_	_	
7-6	2856-2867	corresponds	_	_	
7-7	2868-2870	to	_	_	
7-8	2871-2872	a	_	_	
7-9	2873-2881	duration	_	_	
7-10	2882-2884	of	_	_	
7-11	2885-2897	transmission	_	_	
7-12	2898-2900	of	_	_	
7-13	2901-2905	this	_	_	
7-14	2906-2912	stream	_	_	
7-15	2912-2913	.	_	_	

#Text=As multimedia data are involved, there are typically 25 to 60 video frames per second, according to the video mode (interlaced or progressive), a frame corresponding to an image or a half-image (interlaced mode) and the format (PAL, NTSC, etc.).
8-1	2914-2916	As	_	_	
8-2	2917-2927	multimedia	_	_	
8-3	2928-2932	data	_	_	
8-4	2933-2936	are	_	_	
8-5	2937-2945	involved	_	_	
8-6	2945-2946	,	_	_	
8-7	2947-2952	there	_	_	
8-8	2953-2956	are	_	_	
8-9	2957-2966	typically	_	_	
8-10	2967-2969	25	_	_	
8-11	2970-2972	to	_	_	
8-12	2973-2975	60	_	_	
8-13	2976-2981	video	_	_	
8-14	2982-2988	frames	_	_	
8-15	2989-2992	per	_	_	
8-16	2993-2999	second	_	_	
8-17	2999-3000	,	_	_	
8-18	3001-3010	according	_	_	
8-19	3011-3013	to	_	_	
8-20	3014-3017	the	_	_	
8-21	3018-3023	video	_	_	
8-22	3024-3028	mode	_	_	
8-23	3029-3030	(	_	_	
8-24	3030-3040	interlaced	_	_	
8-25	3041-3043	or	_	_	
8-26	3044-3055	progressive	_	_	
8-27	3055-3056	)	_	_	
8-28	3056-3057	,	_	_	
8-29	3058-3059	a	_	_	
8-30	3060-3065	frame	_	_	
8-31	3066-3079	corresponding	_	_	
8-32	3080-3082	to	_	_	
8-33	3083-3085	an	_	_	
8-34	3086-3091	image	_	_	
8-35	3092-3094	or	_	_	
8-36	3095-3096	a	_	_	
8-37	3097-3107	half-image	_	_	
8-38	3108-3109	(	_	_	
8-39	3109-3119	interlaced	_	_	
8-40	3120-3124	mode	_	_	
8-41	3124-3125	)	_	_	
8-42	3126-3129	and	_	_	
8-43	3130-3133	the	_	_	
8-44	3134-3140	format	_	_	
8-45	3141-3142	(	_	_	
8-46	3142-3145	PAL	_	_	
8-47	3145-3146	,	_	_	
8-48	3147-3151	NTSC	_	_	
8-49	3151-3152	,	_	_	
8-50	3153-3156	etc	_	_	
8-51	3156-3157	.	_	_	
8-52	3157-3158	)	_	_	
8-53	3158-3159	.	_	_	

#Text=A representation of a throughput profile can therefore be a set of data for example in a text file.
9-1	3160-3161	A	_	_	
9-2	3162-3176	representation	_	_	
9-3	3177-3179	of	_	_	
9-4	3180-3181	a	_	_	
9-5	3182-3192	throughput	_	_	
9-6	3193-3200	profile	_	_	
9-7	3201-3204	can	_	_	
9-8	3205-3214	therefore	_	_	
9-9	3215-3217	be	_	_	
9-10	3218-3219	a	_	_	
9-11	3220-3223	set	_	_	
9-12	3224-3226	of	_	_	
9-13	3227-3231	data	_	_	
9-14	3232-3235	for	_	_	
9-15	3236-3243	example	_	_	
9-16	3244-3246	in	_	_	
9-17	3247-3248	a	_	_	
9-18	3249-3253	text	_	_	
9-19	3254-3258	file	_	_	
9-20	3258-3259	.	_	_	

#Text=Each datum of the file is a throughput sample of the stream for a given sampling instant.
10-1	3260-3264	Each	_	_	
10-2	3265-3270	datum	_	_	
10-3	3271-3273	of	_	_	
10-4	3274-3277	the	_	_	
10-5	3278-3282	file	_	_	
10-6	3283-3285	is	_	_	
10-7	3286-3287	a	_	_	
10-8	3288-3298	throughput	_	_	
10-9	3299-3305	sample	_	_	
10-10	3306-3308	of	_	_	
10-11	3309-3312	the	_	_	
10-12	3313-3319	stream	_	_	
10-13	3320-3323	for	_	_	
10-14	3324-3325	a	_	_	
10-15	3326-3331	given	_	_	
10-16	3332-3340	sampling	_	_	
10-17	3341-3348	instant	_	_	
10-18	3348-3349	.	_	_	

#Text=The sampling is such that over each sampling period, it is the highest throughput value which is employed as value of the sample.
11-1	3350-3353	The	_	_	
11-2	3354-3362	sampling	_	_	
11-3	3363-3365	is	_	_	
11-4	3366-3370	such	_	_	
11-5	3371-3375	that	_	_	
11-6	3376-3380	over	_	_	
11-7	3381-3385	each	_	_	
11-8	3386-3394	sampling	_	_	
11-9	3395-3401	period	_	_	
11-10	3401-3402	,	_	_	
11-11	3403-3405	it	_	_	
11-12	3406-3408	is	_	_	
11-13	3409-3412	the	_	_	
11-14	3413-3420	highest	_	_	
11-15	3421-3431	throughput	_	_	
11-16	3432-3437	value	_	_	
11-17	3438-3443	which	_	_	
11-18	3444-3446	is	_	_	
11-19	3447-3455	employed	_	_	
11-20	3456-3458	as	_	_	
11-21	3459-3464	value	_	_	
11-22	3465-3467	of	_	_	
11-23	3468-3471	the	_	_	
11-24	3472-3478	sample	_	_	
11-25	3478-3479	.	_	_	
