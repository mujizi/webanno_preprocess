#FORMAT=WebAnno TSV 3.2
#T_SP=webanno.custom.Diy_coref|


#Text=[0091] Solution Algorithm
#Text=[0092] Suppose we have a feasible solution to the 0-1 integer problem, say x.sub.in.sup.k.
1-1	0-1	[	_	
1-2	1-5	0091	_	
1-3	5-6	]	_	
1-4	7-15	Solution	_	
1-5	16-25	Algorithm	_	
1-6	26-27	[	_	
1-7	27-31	0092	_	
1-8	31-32	]	_	
1-9	33-40	Suppose	_	
1-10	41-43	we	_	
1-11	44-48	have	_	
1-12	49-50	a	_	
1-13	51-59	feasible	_	
1-14	60-68	solution	_	
1-15	69-71	to	_	
1-16	72-75	the	_	
1-17	76-77	0	_	
1-18	77-78	-	_	
1-19	78-79	1	_	
1-20	80-87	integer	_	
1-21	88-95	problem	_	
1-22	95-96	,	_	
1-23	97-100	say	_	
1-24	101-115	x.sub.in.sup.k	_	
1-25	115-116	.	_	

#Text=(The index k will be used below.)
2-1	117-118	(	_	
2-2	118-121	The	_	
2-3	122-127	index	_	
2-4	128-129	k	_	
2-5	130-134	will	_	
2-6	135-137	be	_	
2-7	138-142	used	_	
2-8	143-148	below	_	
2-9	148-149	.	_	
2-10	149-150	)	_	

#Text=Such a feasible solution is always possible because, for example, we can start with any random assignment.
3-1	151-155	Such	_	
3-2	156-157	a	_	
3-3	158-166	feasible	_	
3-4	167-175	solution	_	
3-5	176-178	is	_	
3-6	179-185	always	_	
3-7	186-194	possible	_	
3-8	195-202	because	_	
3-9	202-203	,	_	
3-10	204-207	for	_	
3-11	208-215	example	_	
3-12	215-216	,	_	
3-13	217-219	we	_	
3-14	220-223	can	_	
3-15	224-229	start	_	
3-16	230-234	with	_	
3-17	235-238	any	_	
3-18	239-245	random	_	
3-19	246-256	assignment	_	
3-20	256-257	.	_	

#Text=Of course, this solution is also a feasible solution to the relaxed problem.
4-1	258-260	Of	_	
4-2	261-267	course	_	
4-3	267-268	,	_	
4-4	269-273	this	*[1]	
4-5	274-282	solution	*[1]	
4-6	283-285	is	_	
4-7	286-290	also	_	
4-8	291-292	a	_	
4-9	293-301	feasible	_	
4-10	302-310	solution	_	
4-11	311-313	to	_	
4-12	314-317	the	_	
4-13	318-325	relaxed	_	
4-14	326-333	problem	_	
4-15	333-334	.	_	

#Text=By complementary slackness for the relaxed problem, we know that:
#Text=.lamda..sub.i.sup.k=-(.mu..sub.i,n*(i).sup.k+w.sub.i,n*(i).sup.k)
#Text=where u.sub.in.sup.k=.SIGMA..sub.ijd.sub.jix.sub.in.sup.k to the u.sub.in.sup.k=.SIGMA..sub.ijd.sub.jix.sub.in.sup.k andn*(i)=argmin.sub.n (u.sub.i1.sup.k+w.sub.i1.sup.k, u.sub.i2.sup.k+w.sub.i2.sup.k, . . . , u.sub.iN.sup.k+w.sub.iN.sup.k) is the channel that user device i is assigned, i.e., x.sub.i,n*(i).sup.k=1 to the x.sub.i,n*(i).sup.k=1.
5-1	335-337	By	_	
5-2	338-351	complementary	_	
5-3	352-361	slackness	_	
5-4	362-365	for	_	
5-5	366-369	the	_	
5-6	370-377	relaxed	_	
5-7	378-385	problem	_	
5-8	385-386	,	_	
5-9	387-389	we	_	
5-10	390-394	know	_	
5-11	395-399	that	_	
5-12	399-400	:	_	
5-13	401-402	.	_	
5-14	402-407	lamda	_	
5-15	407-408	.	_	
5-16	408-409	.	_	
5-17	409-420	sub.i.sup.k	_	
5-18	420-421	=	_	
5-19	421-422	-	_	
5-20	422-423	(	_	
5-21	423-424	.	_	
5-22	424-426	mu	_	
5-23	426-427	.	_	
5-24	427-428	.	_	
5-25	428-433	sub.i	_	
5-26	433-434	,	_	
5-27	434-435	n	_	
5-28	435-436	*	_	
5-29	436-437	(	_	
5-30	437-438	i	_	
5-31	438-439	)	_	
5-32	439-440	.	_	
5-33	440-445	sup.k	_	
5-34	445-446	+	_	
5-35	446-453	w.sub.i	_	
5-36	453-454	,	_	
5-37	454-455	n	_	
5-38	455-456	*	_	
5-39	456-457	(	_	
5-40	457-458	i	_	
5-41	458-459	)	_	
5-42	459-460	.	_	
5-43	460-465	sup.k	_	
5-44	465-466	)	_	
5-45	467-472	where	_	
5-46	473-487	u.sub.in.sup.k	_	
5-47	487-488	=	_	
5-48	488-489	.	_	
5-49	489-494	SIGMA	_	
5-50	494-495	.	_	
5-51	495-496	.	_	
5-52	496-524	sub.ijd.sub.jix.sub.in.sup.k	_	
5-53	525-527	to	_	
5-54	528-531	the	_	
5-55	532-546	u.sub.in.sup.k	_	
5-56	546-547	=	_	
5-57	547-548	.	_	
5-58	548-553	SIGMA	_	
5-59	553-554	.	_	
5-60	554-555	.	_	
5-61	555-583	sub.ijd.sub.jix.sub.in.sup.k	_	
5-62	584-588	andn	_	
5-63	588-589	*	_	
5-64	589-590	(	_	
5-65	590-591	i	_	
5-66	591-592	)	_	
5-67	592-593	=	_	
5-68	593-605	argmin.sub.n	_	
5-69	606-607	(	_	
5-70	607-615	u.sub.i1	_	
5-71	615-616	.	_	
5-72	616-621	sup.k	_	
5-73	621-622	+	_	
5-74	622-630	w.sub.i1	_	
5-75	630-631	.	_	
5-76	631-636	sup.k	_	
5-77	636-637	,	_	
5-78	638-646	u.sub.i2	_	
5-79	646-647	.	_	
5-80	647-652	sup.k	_	
5-81	652-653	+	_	
5-82	653-661	w.sub.i2	_	
5-83	661-662	.	_	
5-84	662-667	sup.k	_	
5-85	667-668	,	_	
5-86	669-670	.	_	
5-87	671-672	.	_	
5-88	673-674	.	_	
5-89	675-676	,	_	
5-90	677-691	u.sub.iN.sup.k	_	
5-91	691-692	+	_	
5-92	692-706	w.sub.iN.sup.k	_	
5-93	706-707	)	_	
5-94	708-710	is	_	
5-95	711-714	the	_	
5-96	715-722	channel	_	
5-97	723-727	that	_	
5-98	728-732	user	_	
5-99	733-739	device	_	
5-100	740-741	i	_	
5-101	742-744	is	_	
5-102	745-753	assigned	_	
5-103	753-754	,	_	
5-104	755-758	i.e	_	
5-105	758-759	.	_	
5-106	759-760	,	_	
5-107	761-768	x.sub.i	_	
5-108	768-769	,	_	
5-109	769-770	n	_	
5-110	770-771	*	_	
5-111	771-772	(	_	
5-112	772-773	i	_	
5-113	773-774	)	_	
5-114	774-775	.	_	
5-115	775-780	sup.k	_	
5-116	780-781	=	_	
5-117	781-782	1	_	
5-118	783-785	to	_	
5-119	786-789	the	_	
5-120	790-797	x.sub.i	_	
5-121	797-798	,	_	
5-122	798-799	n	_	
5-123	799-800	*	_	
5-124	800-801	(	_	
5-125	801-802	i	_	
5-126	802-803	)	_	
5-127	803-804	.	_	
5-128	804-809	sup.k	_	
5-129	809-810	=	_	
5-130	810-811	1	_	
5-131	811-812	.	_	

#Text=The multipliers can be used to determine descent directions to this problem.Just as in the relaxed problem, let us use the multipliers to price out possible improvements.
6-1	813-816	The	_	
6-2	817-828	multipliers	_	
6-3	829-832	can	_	
6-4	833-835	be	_	
6-5	836-840	used	_	
6-6	841-843	to	_	
6-7	844-853	determine	_	
6-8	854-861	descent	_	
6-9	862-872	directions	_	
6-10	873-875	to	_	
6-11	876-880	this	_	
6-12	881-893	problem.Just	_	
6-13	894-896	as	_	
6-14	897-899	in	_	
6-15	900-903	the	_	
6-16	904-911	relaxed	_	
6-17	912-919	problem	_	
6-18	919-920	,	_	
6-19	921-924	let	_	
6-20	925-927	us	_	
6-21	928-931	use	_	
6-22	932-935	the	_	
6-23	936-947	multipliers	_	
6-24	948-950	to	_	
6-25	951-956	price	_	
6-26	957-960	out	_	
6-27	961-969	possible	_	
6-28	970-982	improvements	_	
6-29	982-983	.	_	

#Text=The resulting algorithm is similar to the well-known Hungarian algorithm for the linear assignment problem.
7-1	984-987	The	_	
7-2	988-997	resulting	_	
7-3	998-1007	algorithm	_	
7-4	1008-1010	is	_	
7-5	1011-1018	similar	_	
7-6	1019-1021	to	_	
7-7	1022-1025	the	_	
7-8	1026-1036	well-known	_	
7-9	1037-1046	Hungarian	_	
7-10	1047-1056	algorithm	_	
7-11	1057-1060	for	_	
7-12	1061-1064	the	_	
7-13	1065-1071	linear	_	
7-14	1072-1082	assignment	_	
7-15	1083-1090	problem	_	
7-16	1090-1091	.	_	

#Text=(See Kuhn [1955].) [0093]1.
8-1	1092-1093	(	_	
8-2	1093-1096	See	_	
8-3	1097-1101	Kuhn	_	
8-4	1102-1103	[	_	
8-5	1103-1107	1955	_	
8-6	1107-1108	]	_	
8-7	1108-1109	.	_	
8-8	1109-1110	)	_	
8-9	1111-1112	[	_	
8-10	1112-1116	0093	_	
8-11	1116-1117	]	_	
8-12	1117-1118	1	_	
8-13	1118-1119	.	_	

#Text=Set k=1 and select a feasible solution x.sub.in by any satisfactory means. [0094]2.
9-1	1120-1123	Set	_	
9-2	1124-1125	k	_	
9-3	1125-1126	=	_	
9-4	1126-1127	1	_	
9-5	1128-1131	and	_	
9-6	1132-1138	select	_	
9-7	1139-1140	a	_	
9-8	1141-1149	feasible	_	
9-9	1150-1158	solution	_	
9-10	1159-1167	x.sub.in	_	
9-11	1168-1170	by	_	
9-12	1171-1174	any	_	
9-13	1175-1187	satisfactory	_	
9-14	1188-1193	means	_	
9-15	1193-1194	.	_	
9-16	1195-1196	[	_	
9-17	1196-1200	0094	_	
9-18	1200-1201	]	_	
9-19	1201-1202	2	_	
9-20	1202-1203	.	_	

#Text=For every channel available to this device (if a Tabu search procedure is used (Glover [1990]) some channels may not be included in the search to avoid cycling), calculate the "reduced cost"
10-1	1204-1207	For	_	
10-2	1208-1213	every	_	
10-3	1214-1221	channel	_	
10-4	1222-1231	available	_	
10-5	1232-1234	to	_	
10-6	1235-1239	this	_	
10-7	1240-1246	device	_	
10-8	1247-1248	(	_	
10-9	1248-1250	if	_	
10-10	1251-1252	a	_	
10-11	1253-1257	Tabu	_	
10-12	1258-1264	search	_	
10-13	1265-1274	procedure	_	
10-14	1275-1277	is	_	
10-15	1278-1282	used	_	
10-16	1283-1284	(	_	
10-17	1284-1290	Glover	_	
10-18	1291-1292	[	_	
10-19	1292-1296	1990	_	
10-20	1296-1297	]	_	
10-21	1297-1298	)	_	
10-22	1299-1303	some	_	
10-23	1304-1312	channels	_	
10-24	1313-1316	may	_	
10-25	1317-1320	not	_	
10-26	1321-1323	be	_	
10-27	1324-1332	included	_	
10-28	1333-1335	in	_	
10-29	1336-1339	the	_	
10-30	1340-1346	search	_	
10-31	1347-1349	to	_	
10-32	1350-1355	avoid	_	
10-33	1356-1363	cycling	_	
10-34	1363-1364	)	_	
10-35	1364-1365	,	_	
10-36	1366-1375	calculate	_	
10-37	1376-1379	the	_	
10-38	1380-1381	"	_	
10-39	1381-1388	reduced	_	
10-40	1389-1393	cost	_	
10-41	1393-1394	"	_	
